-- MySQL dump 10.13  Distrib 5.5.52, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: yuanchengblog
-- ------------------------------------------------------
-- Server version	5.5.52-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `articles`
--

DROP TABLE IF EXISTS `articles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `articles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `content` text COLLATE utf8_unicode_ci,
  `category_id` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `visited_count` int(11) DEFAULT '0',
  `date` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `articles`
--

LOCK TABLES `articles` WRITE;
/*!40000 ALTER TABLE `articles` DISABLE KEYS */;
INSERT INTO `articles` VALUES (4,'如何使用gem \"twitter-bootstrap-rails\" ','<p><span style=\"font-size:20px;\">TODO:</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">首先在gemfile中添加：</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">gem &quot;twitter-bootstrap-rails&quot;\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px;\">终端中 bundle install ，再输入下一条命令</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">bundle exec rails generate bootstrap:install static\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px;\">在页面中就可以显示bootstrap的样式了</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">参考: <a href=\"https://github.com/seyhunak/twitter-bootstrap-rails\">github.com/seyhunak/twitter-bootstrap-rails</a></span></p>\r\n',2,'2016-12-19 05:50:00','2017-03-08 10:16:45',33,'2016-12-13'),(5,'什么是持续集成（Continuous integration，简称CI）','<h2>一、概念</h2>\r\n\r\n<p><strong>持续集成指的是，频繁地（一天多次）将代码集成到主干。</strong></p>\r\n\r\n<p>它的好处主要有两个：</p>\r\n\r\n<pre>\r\n<span style=\"font-size:14px;\">（1）快速发现错误。每完成一点更新，就集成到主干，可以快速发现错误，定位错误也比较容易。\r\n\r\n（2）防止分支大幅偏离主干。如果不是经常集成，主干又在不断更新，会导致以后集成的难度变大，甚至难以集成。</span>\r\n</pre>\r\n\r\n<p><strong>持续集成的目的，就是让产品可以快速迭代，同时还能保持高质量。</strong>它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。所以最关键的学好单元测试，自动化测试。</p>\r\n\r\n<p>Martin Fowler说过，&quot;持续集成并不能消除Bug，而是让它们非常容易发现和改正。&quot;</p>\r\n\r\n<p>大师Martin Fowler对持续集成是这样定义的:持续集成是一种<a href=\"http://baike.baidu.com/view/3326872.htm\" target=\"_blank\">软件开发实践</a>，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，<a href=\"http://baike.baidu.com/view/1303916.htm\" target=\"_blank\">自动化测试</a>)来验证，从而尽快地发现集成错误。许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发<a href=\"http://baike.baidu.com/view/553710.htm\" target=\"_blank\">内聚</a>的软件。</p>\r\n',2,'2016-12-27 03:29:10','2017-02-22 20:01:31',45,'2016-11-20'),(6,'解决bug: ActiveModel::ForbiddenAttributesError ','<p><span style=\"font-size:20px;\">bug：</span></p>\r\n\r\n<p><span style=\"font-size:20px;\">提交表单时，点击确定后出现error：ActiveModel::ForbiddenAttributesError (ActiveModel::ForbiddenAttributesError)</span></p>\r\n\r\n<p><span style=\"font-size:20px;\">解决方案：&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:20px;\">在rails项目中的config/application.rb中 添加：</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:20px;\">config.action_controller.permit_all_parameters = true</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:20px;\">问题解决</span></p>\r\n',2,'2017-01-04 03:58:44','2017-03-01 21:37:30',32,'2016-07-06'),(7,'FileZilla 链接upyun  查看项目在又拍云上传的图片 ubuntu','<p><span style=\"font-size:18px;\">1、Linux下载fileZilla</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">sudo apt-get install filezilla</span></pre>\r\n\r\n<p><span style=\"font-size:18px;\">2、打开文件选项卡中的站点管理器(site manager)</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">3、主机名：v0.ftp.upyun.com &nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 端口号：21</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 协议：FTP-文件传输协议</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 加密：要求显式的FTP over TLS</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 登录类型：正常</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 用户：操作员id/项目id &nbsp;&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px;\">&nbsp; &nbsp; &nbsp; 密码：******** （操作员密码)</span></p>\r\n',2,'2017-01-06 10:10:51','2017-02-24 15:46:28',30,'2017-01-07'),(8,'如何在win7下安装ubuntu gnome 16.02双系统','<p><span style=\"color:#20537f;\"><span style=\"font-size:24px;\">Todo</span></span></p>\r\n\r\n<p>1.首先在win7下把硬盘整理一下 , 首先下一个硬盘分区工具 Diskgenius. &nbsp; &nbsp;</p>\r\n\r\n<p>2.在c盘或者d盘拆分50g的内存出来. 我的c盘剩下100g的空间,选择拆分分区分出55g点击确定,然后出来一个e盘55g大小,注意这时候e盘是逻辑分区,然后把它调整成主分区.</p>\r\n\r\n<p>3.分区完之后就是下载ubuntu ,不建议使用 Ubuntu Kylin, 直接使用这个Gnome风格的Ubuntu. 16.04. 原因是Gnome 更加对 键盘程序员友好. 不用键盘就能做大部分操作. 而且Gnome界面更加简洁明快.</p>\r\n\r\n<p>4.准备U盘, 制作启动盘. U盘: 大约 1.4G 即可. 建议用 4G 或者 8G的. &nbsp;这个可以百度 一下 u盘写入工具 &nbsp;一大堆软件.</p>\r\n\r\n<p>5.文件备份,把重要的文件都备份下来. 文件无价. COPY到另外一个U盘中.</p>\r\n\r\n<p>6.插上u盘重启,按f2进入BIOS模式,找到boot相关的选项, 让启动项 首选 USB. f10保存.</p>\r\n\r\n<p>7.再重启看到页面</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/6/content_1.png\" /></p>\r\n\r\n<p>8.选择 &quot;Install Ubuntu GNOME&quot;.</p>\r\n\r\n<p>9.出现无线网络页面. 切记不要联网.</p>\r\n\r\n<p>10.出现了 &quot;准备安装&quot;页面.两个都不需要选择. 都会增加安装时间. 直接下一步.</p>\r\n\r\n<p>11.选择安装方式,我们要选择最下面的 &quot; Something else&quot; . 我们要保留win7.</p>\r\n\r\n<p>12.最重要的一步,显示硬盘情况页面.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/7/content_2.png\" /></p>\r\n\r\n<p>我们要把硬盘划分出一部分出来,给 ubuntu使用.所以有两点要求:<br />\r\n1.空间足够, 例如 40G以上.<br />\r\n2.是 primary 分区.(不是 extension分区)<br />\r\n具体操作过程是:<br />\r\n鼠标左键 点击 要发生改变的分区(例如, D区 (图中是 /dev/sda2 , 我们无法从名字上知道它是哪个区, 但是可以从容量上看出来) 比较大,是300G, 空闲空间100G, 我们就可以点击它, 然后点击下面的 +, - , change 三个按钮中的 change, 然后修改它的容量. 保存.<br />\r\n之后就会看到, 硬盘多了一个分区. 100000MB. ( 上图中的 freespace )<br />\r\n拿出50G, 作为 / 目录( Linux下, 没有特别强的分区概念. 我们认为 根目录占据一个区 ) .<br />\r\nLinux可以使用的分区就是 Ext2, Ext3, Ext4, swap 等分区. 我们现在使用 Ext4 分区. 这个是近十年的技术, 性能更好一些, 其他的分区比较古老了.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/8/content_3.jpeg\" /></p>\r\n\r\n<p>拿出4g硬盘 作为虚拟内存 作为swap分区</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/9/content_4.jpeg\" /></p>\r\n\r\n<p>最后一个选择 &quot;Device for boot loader installation&quot;, 也就是页面最下方部分. 这个很重要. 是linux的启动分区. 把它放在整个硬盘上.<br />\r\n(注意, 要选择 /dev/sda, 而不是 /dev/sda1 上)</p>\r\n\r\n<p>点击确定进入下一步.后面的步骤就很简单了. 时间选择 &nbsp;shanghai.........</p>\r\n\r\n<p>等待几分钟就可以很愉快的使用 ubuntu 了.</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-01-07 14:50:57','2017-03-01 22:27:57',15,'2016-06-15'),(9,'Ubuntu gnome下安装搜狗输入法','<p>Todo</p>\r\n\r\n<p>1.在google里搜索sogou for linux 在官方网站上下载sougoupinyin.deb文件 (终端输入 uname -m &nbsp; &nbsp;查询是64位还是32位)选择相应的下载.</p>\r\n\r\n<p>2.打开终端输入以下命令,删除fcitx 和ibus.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/10/content_sougou1__1_.png\" style=\"width: 703px; height: 171px;\" /></p>\r\n\r\n<p>2.在download文件夹下找到sougoupinyin.deb文件点击安装,这时候会提示非法第三方,不管它.运气好能装上,不会出现bug.</p>\r\n\r\n<p>3.成功安装后,重启系统,重启后并不能立即使用搜狗输入法,得重新安装企鹅输入法 Fcitx ,打开终端输入命令如下:</p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">sudo add-apt-repository ppa:fcitx-team/nightly\r\nsudo apt-get update\r\nsudo apt-get install fcitx im-switch</span></pre>\r\n\r\n<p>4.安装完后 alt+f2, 输入im-config ,改成fcitx输入法确定.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/11/content_sogou2.png\" style=\"width: 712px; height: 426px;\" /></p>\r\n\r\n<p>重启电脑,就能看到久违的搜狗输入法了.</p>\r\n\r\n<p>PS:上面除了搜狗还可以用相同的办法安装其他输入法 google 等等 &nbsp;..把上面的代码改成即可,其余步骤不变.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/12/content_sougo3.png\" style=\"width: 800px; height: 128px;\" /></p>\r\n',2,'2017-01-07 14:59:19','2017-03-01 19:50:04',11,'2016-06-16'),(10,'Ubuntu 搜狗输入法bug的解决','<p>Todo</p>\r\n\r\n<p>问题:<br />\r\ndavid@david-MS-7549:~$ sudo apt-get install fcitx-sogoupinyin<br />\r\n正在读取软件包列表... 完成<br />\r\n正在分析软件包的依赖关系树&nbsp;<br />\r\n正在读取状态信息... 完成&nbsp;<br />\r\nE: 未发现软件包 fcitx-sogoupinyin</p>\r\n\r\n<p>解决办法: &nbsp; 在这条命令之前加一条命令如下:</p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">sudo add-apt-repository ppa:fcitx-team/nightly &amp;&amp; sudo apt-get update</span></pre>\r\n\r\n<p>运行一下上面这条命令就有fcitx-sogoupinyin了，不过提醒一下，由于授权的问题，fcitx-sogoupinyin目前只有deepin的源才能分发，其它发行版没有分发许可。</p>\r\n',2,'2017-01-07 15:03:30','2017-02-26 14:19:21',5,'2016-06-17'),(11,'安装ubuntu gnome出现的bug及解决','<p>Todo</p>\r\n\r\n<p>问题:修改BIOS启动模式后,用u盘启动,出现</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/13/content_2016-10-26_23-44-48屏幕截图.png\" style=\"width: 450px; height: 161px;\" /></p>\r\n\r\n<p>这个界面时,点击任何一个选项之后,都进入黑屏状态.</p>\r\n\r\n<p>解决方案:</p>\r\n\r\n<p>所有的NVIDIA系列的显卡对我们安装ubuntu非常不友好,不兼容.所以我们的进需要进入win7,禁用我们的NVIDIA显卡.具体操作如下:</p>\r\n\r\n<p>1.点击&nbsp;桌面选择&quot;计算机&quot;右键&quot;属性.</p>\r\n\r\n<p>2.打开&quot;系统&quot;窗口,选择右边导航&quot;设备管理器&quot;</p>\r\n\r\n<p>3.打开设备管理器窗口,双击最下面的&quot;显示适配器&quot;</p>\r\n\r\n<p>4.选择NVIDIA....右键,选择禁用. 用win7 撸的时候可以再打开,开开心心开黑.</p>\r\n\r\n<p>5.重启电脑,就可以愉快的安装ubuntu了.</p>\r\n',2,'2017-01-07 15:09:33','2017-03-02 08:27:52',7,'2016-06-18'),(12,'如何在ubuntu下安装ruby','<p>TODO：</p>\r\n\r\n<p>虽然系统默认自带了Ruby，但是不如我们自定义的灵活．我们使用rbenv 来安装Ruby,　最大的好处是 可以允许你同时安装多个Ruby版本．</p>\r\n\r\n<p>安装rbenv：rbenv(ruby environment),是管理多个不同版本的ruby工具，是之前rvm(ruby version manager)的替代品。类似的工具还有管理不同Node版本的nvm(node version manager)。</p>\r\n\r\n<p>具体的安装步骤为:</p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">git clone git://github.com/sstephenson/rbenv.git ~/.rbenv\r\n# 用来编译安装 ruby\r\ngit clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\r\n# 用来管理 gemset, 可选, 因为有 bundler 也没什么必要\r\ngit clone git://github.com/jamis/rbenv-gemset.git  ~/.rbenv/plugins/rbenv-gemset\r\n# 通过 gem 命令安装完 gem 后无需手动输入 rbenv rehash 命令, 推荐\r\ngit clone git://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash\r\n# 通过 rbenv update 命令来更新 rbenv 以及所有插件, 推荐\r\ngit clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update</span>\r\n</pre>\r\n\r\n<p>然后把下面的代码放在~/.zshrc里面,(<code>~/.bash_profile</code>,&nbsp;<code>~/.zshrc</code>,&nbsp;<code>~/.profile</code>, or<code>~/.bashrc</code>).</p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;\r\neval &quot;$(rbenv init -)&quot;</span>\r\n</pre>\r\n\r\n<p>注意 :如果你使用的是bash，那应该把上面的代码放在~/.bashrc或者~/.bash_profile里面</p>\r\n\r\n<p>最后，重启一下你的Terminal就OK了。</p>\r\n\r\n<p>安装ruby:</p>\r\n\r\n<p>rbenv install --list # 列出所有可以安装的ruby版本<br />\r\nrbenv install 1.9.3-p551 # 安装特定版本的ruby</p>\r\n\r\n<p>列出ruby版本</p>\r\n\r\n<p>rbenv versions # 系统所有通过rbenv安装的ruby版本<br />\r\nrbenv version # 当前版本</p>\r\n',2,'2017-01-07 15:28:50','2017-03-15 09:24:21',12,'2016-06-20'),(13,'解决BUG bundle exec rails server error:Gem Load Error is: Could not find a JavaScript runtime.','<p>TODO:</p>\r\n\r\n<p>BUG :</p>\r\n\r\n<p>bundle exec rails server error:Gem Load Error is: Could not find a JavaScript runtime.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/14/content_bug1_.png\" style=\"width: 800px; height: 111px;\" /></p>\r\n\r\n<p>解决：</p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px;\">sudo apt-get install nodejs</span>\r\n</pre>\r\n\r\n<p>安装一个nodejs&nbsp;</p>\r\n\r\n<p>再输入 bundle exec rails server &nbsp; 问题解决。</p>\r\n',2,'2017-01-07 15:36:38','2017-03-23 20:38:18',26,'2016-06-22'),(14,'BUG:ruby on rails link_to delete method not working 点击删除没用,请求总是get默认打到show页面','<p><span style=\"color:#20537f;\"><span style=\"font-size:24px;\">TODO:</span></span></p>\r\n\r\n<p>question:</p>\r\n\r\n<p>ruby on rails link_to delete method not working</p>\r\n\r\n<p>点击删除按钮页面总跳转到详情页,总是默认get请求，打到show页面。</p>\r\n\r\n<p>bug解决：</p>\r\n\r\n<p>原因：改变了layouts/application.html.erb 文件中的一些数据&nbsp;</p>\r\n\r\n<p>必须在head标签里面加上以下代码：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/15/content_bug2.png\" style=\"width: 739px; height: 82px;\" /></p>\r\n\r\n<p>加上之后bug解决。</p>\r\n',2,'2017-01-07 15:41:16','2017-03-04 22:25:56',14,'2016-06-24'),(15,'rails中使用devise,并用上Devise Bootstrap Views','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/40/content_屏幕快照_2017-03-08_下午6.00.26.png\" style=\"width: 800px; height: 374px;\" /></p>\r\n\r\n<p>1.在Gemfile中添加</p>\r\n\r\n<pre>\r\ngem &#39;devise&#39;, &#39;4.1.1&#39;\r\ngem &quot;twitter-bootstrap-rails&quot;, &#39;3.2.0&#39;\r\ngem &#39;devise-bootstrap-views&#39;, &#39;0.0.9&#39;</pre>\r\n\r\n<p>2.在终端运行下面三个命令</p>\r\n\r\n<pre>\r\n$ bundle exec rails generate devise:install \r\n$ bundle exec rails generate devise user \r\n$ bundle exec rails g devise:views:bootstrap_templates\r\n</pre>\r\n\r\n<p>如果登录用户的表不叫user, 比如叫做editor:</p>\r\n\r\n<p>$ bundle exec rails generate devise editor&nbsp;</p>\r\n\r\n<p>如果数据库中没有这个editor表,就会新建一个，如果已经有editor,不会删掉 ，会把所有字段加到后面。</p>\r\n\r\n<p>3.application controller 增加：</p>\r\n\r\n<pre>\r\nclass ApplicationController &lt; ActionController::Base\r\n  before_action :authenticate_user!\r\nend</pre>\r\n\r\n<p>4.为layout/application.html.erb 增加 登录 ，退出等按钮</p>\r\n\r\n<pre>\r\n   &lt;% if user_signed_in? %&gt;        \r\n     &lt;ul class=&quot;nav navbar-nav&quot; style=&#39;float:right&#39;&gt;\r\n       &lt;li&gt;&lt;%= link_to &quot;欢迎你：#{current_user.try :email}&quot; %&gt;&lt;/li&gt;\r\n       &lt;li&gt;\r\n         &lt;%= link_to &#39;退出&#39;, destroy_user_session_path, :method =&gt; :delete  %&gt;  \r\n       &lt;/li&gt;\r\n      &lt;/ul&gt;\r\n    &lt;% else %&gt;\r\n      &lt;ul class=&quot;nav navbar-nav&quot; style=&#39;float:right&#39;&gt;\r\n        &lt;li&gt;\r\n          &lt;%= link_to &#39;登陆&#39; , &#39;/users/sign_in&#39;, :method =&gt; :get%&gt;\r\n        &lt;/li&gt;\r\n      &lt;/ul&gt;\r\n    &lt;% end %&gt;</pre>\r\n\r\n<p>几个核心方法：</p>\r\n\r\n<p>user_signed_in? 判断用户是否登录</p>\r\n\r\n<p>current_user 获取当前用户</p>\r\n\r\n<p>5.输入gem env 查找devise_controller的路径，让后复制到rails 项目中。</p>\r\n\r\n<pre>\r\nINSTALLATION DIRECTORY: /Users/cool/.rbenv/versions/2.2.4/lib/ruby/gems/2.2.0/gems</pre>\r\n\r\n<p>6.最后修改一下devise view的样式就可以了。</p>\r\n',2,'2017-01-12 07:38:55','2017-03-11 08:03:00',18,'2016-12-30'),(16,'解决bug:由development开发模式变成production生产模式（使用的是thin服务器）以后，页面的图片加载不了？','<article id=\"blog_post\">\r\n<p>TODO:</p>\r\n\r\n<p>bug:</p>\r\n\r\n<p>由开发模式变成生产模式以后，页面的图片加载不了？\\</p>\r\n\r\n<p>解决方法：</p>\r\n\r\n<p>1.修改 config/environments/production.rb 文件</p>\r\n\r\n<pre>\r\nconfig.serve_static_assets = false\r\n修改成\r\nconfig.serve_static_assets = true\r\n</pre>\r\n\r\n<p>2.在终端中输入这条命令将图片编译一下：</p>\r\n\r\n<pre>\r\nbundle exec rake assets:precompile RAILS_ENV=production\r\n</pre>\r\n\r\n<p>3.重启thin服务器输入</p>\r\n\r\n<pre>\r\nbundle exec thin start -C config/thin.yml\r\n</pre>\r\n\r\n<p>4.刷新页面，图片就显示出来了</p>\r\n</article>\r\n\r\n<nav id=\"next_prev_article\">&nbsp;</nav>\r\n',2,'2017-01-12 09:31:06','2017-02-23 08:04:18',9,'2016-10-20'),(17,'如何在纯html中创建二级（儿子级）菜单 two level drop down menu','<p>TODO:</p>\r\n\r\n<p>效果图：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/16/content_drop_down_menu.png\" style=\"width: 450px; height: 239px;\" />、</p>\r\n\r\n<p>实现代码：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/17/content_Screenshot_from_2016-12-01_11-08-13.png\" style=\"width: 450px; height: 338px;\" /></p>\r\n\r\n<p>现将列表显示出来 ，再在head中加一些样式：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/18/content_Screenshot_from_2016-12-01_11-09-26.png\" style=\"width: 272px; height: 300px;\" /></p>\r\n\r\n<p>最后再调整一下位置即可。</p>\r\n',2,'2017-01-12 09:35:55','2017-02-25 13:46:48',24,'2016-11-12'),(18,'在rails中-index页面添加轮播图 slider','<p>TODO:</p>\r\n\r\n<p>1.把这三个网页上的内容复制到本地项目目录下。</p>\r\n\r\n<p><a href=\"http://bxslider.com/lib/jquery.bxslider.css\">http://bxslider.com/lib/jquery.bxslider.css</a></p>\r\n\r\n<p><a href=\"http://bxslider.com/js/jquery.min.js\">http://bxslider.com/js/jquery.min.js</a></p>\r\n\r\n<p><a href=\"http://bxslider.com/lib/jquery.bxslider.js\">http://bxslider.com/lib/jquery.bxslider.js</a></p>\r\n\r\n<p>2.在head中应用slider 的js, css文件</p>\r\n\r\n<pre>\r\n&lt; script src=&quot;jquery.min.js&quot;&gt;\r\n&lt; script src=&quot;jquery.bxslider.min.js&quot;&gt;\r\n&lt; link href=&quot;jquery.bxslider.css&quot; rel=&quot;stylesheet&quot; /&gt;\r\n</pre>\r\n\r\n<p>3.在body中添加代码（添加图片）</p>\r\n\r\n<pre>\r\n&lt; ul class=&quot;bxslider&quot;&gt;\r\n  &lt; li&gt;&lt; img src=&quot;/images/pic1.jpg&quot; /&gt;\r\n  &lt; li&gt;&lt; img src=&quot;/images/pic2.jpg&quot; /&gt;\r\n  &lt; li&gt;&lt; img src=&quot;/images/pic3.jpg&quot; /&gt;\r\n  &lt; li&gt;&lt; img src=&quot;/images/pic4.jpg&quot; /&gt;\r\n&lt; /ul&gt;\r\n</pre>\r\n\r\n<p>4.在最后添加上代码：</p>\r\n\r\n<pre>\r\n &lt; script&gt;\r\n $(document).ready(function(){\r\n   $(&#39;.bxslider&#39;).bxSlider({\r\n     auto: true,\r\n     autoControls: true,\r\n     adaptiveHeight: true,\r\n     mode: &#39;fade&#39;\r\n   });\r\n });\r\n &lt; /script&gt;            \r\n</pre>\r\n\r\n<p>5.最后在加一些样式 就可以了 &nbsp;在官网的options中</p>\r\n\r\n<p><a href=\"http://bxslider.com\">具体的东西请参考官网 &nbsp;http://bxslider.com/</a></p>\r\n',2,'2017-01-12 09:42:42','2017-02-23 04:16:56',5,'2016-10-14'),(19,'如何只删除git远程仓库文件，但是在本地的这个文件还存在','<p>TODO：</p>\r\n\r\n<p>在终端输入一下命令，删除本地缓存：</p>\r\n\r\n<pre>\r\nrm --cached file_name\r\ngit commit -m &quot;如何在git远程仓库删除一个文件，但是在本地还存在&quot;\r\ngit push\r\n</pre>\r\n\r\n<p>这样git仓库的文件就消失了</p>\r\n',2,'2017-01-12 09:51:35','2017-03-05 00:24:38',6,'2016-08-16'),(20,'bug: 当自己新建一个users_controller时 点击登录时会跳到user_controller的index页面而不是devise的sign-in','<p>TODO:</p>\r\n\r\n<p>原因： devise中的controller和 自己的users_controller发生了冲突，路由默认打到users_controller的index页面。</p>\r\n\r\n<p>解决：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/19/content_devise_for.png\" style=\"width: 800px; height: 144px;\" /></p>\r\n\r\n<p>这个 resources :users &nbsp;路由 一定得写在 devise_for 的路由的后面 &nbsp;rails 是按顺序从上到下一次解析的。</p>\r\n\r\n<p>重启一下服务器 &nbsp; 问题解决。</p>\r\n',2,'2017-01-12 09:55:27','2017-02-23 08:25:18',7,'2016-10-16'),(21,'如何在index页 统计show页面的点击次数 统计文章点击量','<p>TODO:</p>\r\n\r\n<p>思路：用户每点击一篇文章，发起一个show页面的get请求，访问量就加1.</p>\r\n\r\n<p>在article_controller中show方法中下面的方法 ：（visited_count是article中的列，）</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/21/content_统计show页面点击量.png\" style=\"width: 548px; height: 175px;\" /></p>\r\n\r\n<p>然后在index页面加入显示内容：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/22/content_index显示统计数.png\" style=\"width: 550px; height: 92px;\" /></p>\r\n\r\n<p>浏览器中的页面显示如下：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/20/content_页面显示.png\" style=\"width: 550px; height: 331px;\" /></p>\r\n\r\n<p>在layout/footer中添加总的访问量：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/23/content_count_all.png\" style=\"width: 550px; height: 372px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-01-12 10:07:45','2017-02-24 05:32:39',17,'2016-11-08'),(22,'在编辑页面中添加所见即所得编辑器 ckeditor (rails 项目中)','<p>TODO:</p>\r\n\r\n<p>1.ckeditor 所见即所得编辑器 ：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/26/content_ckeditor.png\" style=\"width: 800px; height: 305px;\" /></p>\r\n\r\n<article id=\"blog_post\">\r\n<p>2.安装 imagemagick &nbsp;（linux下）</p>\r\n\r\n<pre>\r\n$ sudo apt-get install imagemagick\r\n</pre>\r\n\r\n<p>3.编辑Gemfile 文件</p>\r\n\r\n<pre>\r\ngem &#39;carrierwave&#39;\r\ngem &#39;mini_magick&#39;\r\ngem &#39;ckeditor&#39;\r\n</pre>\r\n\r\n<p>4.在终端中输入</p>\r\n\r\n<pre>\r\n$ rails generate ckeditor:install --orm=active_record --backend=carrierwave\r\n</pre>\r\n\r\n<p>5.在application.js 或者 application.js.erb文件中：</p>\r\n\r\n<pre>\r\n//= require ckeditor/init\r\n</pre>\r\n\r\n<p>6.在终端中输入</p>\r\n\r\n<pre>\r\n$ bundle exec rake db:migrate\r\n</pre>\r\n\r\n<p>7.在对应的编辑页面中引用ckeditor编辑器</p>\r\n\r\n<pre>\r\n&lt;%= form_for @article do |f| %&gt;\r\n  &lt;%= f.cktext_area :introduction %&gt;\r\n&lt;% end %&gt;\r\n</pre>\r\n\r\n<p>注意，做完上面几步, ckeditor是出来了,但是还没有 &quot;上传文件&quot; 这个功能</p>\r\n\r\n<p>add this file to : app/assets/javascripts/ckeditor/config.js</p>\r\n\r\n<pre>\r\n/*\r\nCopyright (c) 2003-2011, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.html or http://ckeditor.com/license\r\n*/\r\n\r\nCKEDITOR.editorConfig = function( config )\r\n{\r\n  // Define changes to default configuration here. For example:\r\n  config.language = &#39;zh-CN&#39;;\r\n  config.height=&#39;600px&#39;;\r\n  // config.uiColor = &#39;#AADC6E&#39;;\r\n\r\n  /* Filebrowser routes */\r\n  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed.\r\n  config.filebrowserBrowseUrl = &quot;/ckeditor/attachment_files&quot;;\r\n\r\n  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Flash dialog.\r\n  config.filebrowserFlashBrowseUrl = &quot;/ckeditor/attachment_files&quot;;\r\n\r\n  // The location of a script that handles file uploads in the Flash dialog.\r\n  config.filebrowserFlashUploadUrl = &quot;/ckeditor/attachment_files&quot;;\r\n\r\n  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Link tab of Image dialog.\r\n  config.filebrowserImageBrowseLinkUrl = &quot;/ckeditor/pictures&quot;;\r\n\r\n  // The location of an external file browser, that should be launched when &quot;Browse Server&quot; button is pressed in the Image dialog.\r\n  config.filebrowserImageBrowseUrl = &quot;/ckeditor/pictures&quot;;\r\n\r\n  // The location of a script that handles file uploads in the Image dialog.\r\n  config.filebrowserImageUploadUrl = &quot;/ckeditor/pictures&quot;;\r\n\r\n  // The location of a script that handles file uploads.\r\n  config.filebrowserUploadUrl = &quot;/ckeditor/attachment_files&quot;;\r\n\r\n  // Rails CSRF token\r\n  config.filebrowserParams = function(){\r\n    var csrf_token, csrf_param, meta,\r\n        metas = document.getElementsByTagName(&#39;meta&#39;),\r\n        params = new Object();\r\n\r\n    for ( var i = 0 ; i &lt; metas.length ; i++ ){\r\n      meta = metas[i];\r\n\r\n      switch(meta.name) {\r\n        case &quot;csrf-token&quot;:\r\n          csrf_token = meta.content;\r\n          break;\r\n        case &quot;csrf-param&quot;:\r\n          csrf_param = meta.content;\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n    }\r\n\r\n    if (csrf_param !== undefined &amp;&amp; csrf_token !== undefined) {\r\n      params[csrf_param] = csrf_token;\r\n    }\r\n\r\n    return params;\r\n  };\r\n\r\n  config.addQueryString = function( url, params ){\r\n    var queryString = [];\r\n\r\n    if ( !params ) {\r\n      return url;\r\n    } else {\r\n      for ( var i in params )\r\n        queryString.push( i + &quot;=&quot; + encodeURIComponent( params[ i ] ) );\r\n    }\r\n\r\n    return url + ( ( url.indexOf( &quot;?&quot; ) != -1 ) ? &quot;&amp;&quot; : &quot;?&quot; ) + queryString.join( &quot;&amp;&quot; );\r\n  };\r\n\r\n  // Integrate Rails CSRF token into file upload dialogs (link, image, attachment and flash)\r\n  CKEDITOR.on( &#39;dialogDefinition&#39;, function( ev ){\r\n    // Take the dialog name and its definition from the event data.\r\n    var dialogName = ev.data.name;\r\n    var dialogDefinition = ev.data.definition;\r\n    var content, upload;\r\n\r\n    if (CKEDITOR.tools.indexOf([&#39;link&#39;, &#39;image&#39;, &#39;attachment&#39;, &#39;flash&#39;], dialogName) &gt; -1) {\r\n      content = (dialogDefinition.getContents(&#39;Upload&#39;) || dialogDefinition.getContents(&#39;upload&#39;));\r\n      upload = (content == null ? null : content.get(&#39;upload&#39;));\r\n\r\n      if (upload &amp;&amp; upload.filebrowser &amp;&amp; upload.filebrowser[&#39;params&#39;] === undefined) {\r\n        upload.filebrowser[&#39;params&#39;] = config.filebrowserParams();\r\n        upload.action = config.addQueryString(upload.action, upload.filebrowser[&#39;params&#39;]);\r\n      }\r\n    }\r\n  });\r\n};\r\n</pre>\r\n\r\n<p>之后就可以在页面中看到ckeditor 编辑器了。</p>\r\n\r\n<p>参考（<a href=\"http://web.siwei.tech/\">web.siwei.tech</a>）</p>\r\n</article>\r\n\r\n<nav id=\"next_prev_article\">&nbsp;</nav>\r\n',2,'2017-01-12 10:12:28','2017-02-24 09:19:58',14,'2016-11-24'),(23,'如何使用gem \"twitter-bootstrap-rails\"','<article id=\"blog_post\">\r\n<p>TODO:</p>\r\n\r\n<p>首先在gemfile中添加：</p>\r\n\r\n<pre>\r\ngem &quot;twitter-bootstrap-rails&quot;\r\n</pre>\r\n\r\n<p>终端中 bundle install ，再输入下一条命令</p>\r\n\r\n<pre>\r\nrails generate bootstrap:install static\r\n</pre>\r\n\r\n<p>在页面中就可以显示bootstrap的样式了</p>\r\n\r\n<p>参考:&nbsp;<a href=\"https://github.com/seyhunak/twitter-bootstrap-rails\">github.com/seyhunak/twitter-bootstrap-rails</a></p>\r\n</article>\r\n\r\n<nav id=\"next_prev_article\">&nbsp;</nav>\r\n',2,'2017-01-12 10:18:17','2017-03-17 23:33:37',16,'2016-11-13'),(24,'如何在index中使用kaminari组件进行分页(Pagination)','<p>TODO:</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/27/content_分页图片.png\" style=\"width: 639px; height: 197px;\" /></p>\r\n\r\n<p>上图是加了分页之后的效果。</p>\r\n\r\n<p>kaminari的优点及原理：它的基本原理是： 给出第几页，每页多少条记录，就能在数据库中查找对应的记录。能够快速查询数据库。</p>\r\n\r\n<p>操作步骤：（一个rails 4 的项目中）</p>\r\n\r\n<p>1.修改Gemfile</p>\r\n\r\n<pre>\r\ngem &#39;kaminari&#39;</pre>\r\n\r\n<p>2.bundle install</p>\r\n\r\n<p>3.对应的controller的index中添加代码：</p>\r\n\r\n<pre>\r\n@articles = Article.where(&quot;category_id = ?&quot;, params[:category_id]).page(params[:page]).per(20)\r\n</pre>\r\n\r\n<p>4.在view中：</p>\r\n\r\n<pre>\r\n&nbsp; &lt;%= paginate @articles %&gt;</pre>\r\n\r\n<p>5.可以通过下列命令生成全局配置文件config/initializers/：</p>\r\n\r\n<pre>\r\n&nbsp;$ bundle exec rails g kaminari:config</pre>\r\n\r\n<p>6.分页效果已经出来了，但是都是英文的，我们要把它换成中文。在Rails.root/config/locales 中，增加一个语言文件(zh-CN.yml)</p>\r\n\r\n<pre>\r\nzh-CN:\r\n&nbsp; views:\r\n&nbsp; &nbsp; &nbsp;pagination:\r\n&nbsp; &nbsp; &nbsp; &nbsp; first: &quot;&amp;laquo; 首页&quot;\r\n&nbsp; &nbsp; &nbsp; &nbsp; last: &quot;末页 &amp;raquo;&quot;\r\n&nbsp; &nbsp; &nbsp; &nbsp; previous: &quot;&amp;lsaquo; 上页&quot;\r\n&nbsp; &nbsp; &nbsp; &nbsp; next: &quot;下页 &amp;rsaquo;&quot;</pre>\r\n\r\n<p>7.接下来在 config/application.rb中加入这样一行代码：</p>\r\n\r\n<pre>\r\nconfig.i18n.default_locale = &quot;zh-CN&quot;</pre>\r\n\r\n<p>8.重启服务器 就能看到分页的 效果了。</p>\r\n',2,'2017-01-12 10:23:35','2017-02-24 03:01:03',20,'2016-11-25'),(25,'原创歌曲  迷失的信仰','<p>迷失的信仰</p>\r\n\r\n<div>词曲：文圆承</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>（双吉他前奏）<img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/28/content_IMG_0012.JPG\" style=\"float: right; margin-left: 180px; margin-right: 180px; width: 400px; height: 452px;\" /></div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>走过 漫长的等待 &nbsp;亘古的长夜亦睡去 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div>\r\n\r\n<div>黑色的梦魇 中那片芬芳 &nbsp;我在这里静望 沐浴月光</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>遗忘的火焰在梦底深藏 或许是悲伤&nbsp;</div>\r\n\r\n<div>或许是迷茫 千年不遇温存的目光&nbsp;</div>\r\n\r\n<div>刹那停下 没有朝阳与风 与晴朗</div>\r\n\r\n<div>而在长长 如衣带 飘飞的 苍穹下 &nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>我想抛开浑浊的记忆阿 &nbsp;</div>\r\n\r\n<div>却被密拢的蔷薇扎伤 &nbsp;</div>\r\n\r\n<div>直到越过绿色的城墙</div>\r\n\r\n<div>我想飞往坠落的方向~</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>禁锢的桎梏 最后的疯狂</div>\r\n\r\n<div>扭曲了模样</div>\r\n\r\n<div>逆流回未知的方向</div>\r\n\r\n<div>教堂的歌声 没有那信仰</div>\r\n\r\n<div>星辰与幻想 伴随寂寞的序章</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>遗忘的火焰在梦底深藏 或许是悲伤&nbsp;<img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/30/content_IMG_0014.JPG\" style=\"margin-left: 180px; margin-right: 180px; float: right; width: 400px; height: 450px;\" /></div>\r\n\r\n<div>或许是迷茫 千年不遇温存 的目光 &nbsp;</div>\r\n\r\n<div>刹那停下 没有朝阳与风 与晴朗</div>\r\n\r\n<div>而在长长如衣带飘 飞的苍穹下&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>我想抛开浑浊的记忆阿 &nbsp;</div>\r\n\r\n<div>却被密拢的蔷薇扎伤&nbsp;</div>\r\n\r\n<div>直到越过绿色的城墙</div>\r\n\r\n<div>我想飞往坠落的方向~</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;&nbsp;（solo）</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>我想抛开浑浊的记忆阿</div>\r\n\r\n<div>却被密拢的蔷薇扎伤</div>\r\n\r\n<div>直到越过绿色的城墙</div>\r\n\r\n<div>我想飞往坠落的方向~</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>（清唱2句）</div>\r\n\r\n<div>（进入最后高潮 再一遍）</div>\r\n',3,'2017-01-26 05:17:12','2017-03-04 03:44:33',33,'2017-01-26'),(26,'入手一把期待已久的泰勒','<p>最近入手了一把泰勒210dlx，这是一款云杉面单，外观，做工，以及音色不要太完美。拿到手里的时候真的是爱不释手。</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/31/content_IMG_3346.JPG\" style=\"width: 800px; height: 597px;\" /></p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/32/content_IMG_3347.JPG\" style=\"width: 600px; height: 800px;\" /></p>\r\n\r\n<p>首先给他家来个泰勒吉他的简介：</p>\r\n\r\n<pre accuse=\"aContent\" id=\"best-content-346668726\">\r\n泰勒就是汽车中的 兰博基尼 和 马丁（法拉利）并称。</pre>\r\n\r\n<p>科技领导的品牌实践，「只做最好的吉他!」 是创办人Bob Taylor在1974年创建<a href=\"http://baike.baidu.com/view/2743233.htm\" target=\"_blank\">Taylor吉他</a>时的信念，直到现在始终如一。就一家30余年的吉它品牌而言，要挤入高级吉他的行列原本就属不易，而Taylor</p>\r\n\r\n<p>从木料、做工、音色等各方面，不断挑战人类制作吉他技术的极限，展现在吉他制造上的深入与执着。</p>\r\n\r\n<div>200系列</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>背板与边板采用Sapele,面板采用Sitka Spruce，指板与琴桥则为Ebony; 200系列给予吉他玩家最容易拥有优质的木料音色的机会。</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>\r\n<div>木料是音色灵魂之所在，所以了解各种木料的物理属性是致关重要的。</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>寻找世上最好的木料来成就Taylor吉他的最好音色，这也是让我们也能探索出世上最好音色的可能性，有些木料是经典款式与广为人们所知的好音色，其它TAYLOR所采用一些鲜为人知的木料皆有其令人</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>好奇惊艳的特性，Taylor对于所选择之木料将给予最好的呵护，此外也尽可能地节省这些可贵的资源，所选择的木头同时具有视觉上的美观以及听觉上的悦耳，你将可以发现Taylor吉他将可带给你最好的</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>木料最好的色泽 以及最好的音色.</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>1. Sitka spruce 清亮的音色，极广域的音色动态表现，适合给节奏性强烈的曲风.</div>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n',3,'2017-01-26 12:22:49','2017-03-04 03:44:49',18,'2016-12-14'),(27,'论买一把好的吉他，对一个吉他爱好者的重要性','<p>本人是吉他爱好者多年，一直都是用的是1000以下的&#39;烧火棍&#39;，每次练琴最多连个两小时，手就受不了了，和吉他的手感，让我的手苦不堪言，其音色让我不那么热衷于练琴。</p>\r\n\r\n<p>正所谓：</p>\r\n\r\n<pre>\r\n工欲善其事必先利其器.</pre>\r\n\r\n<p>最近入手了一把泰勒210dlx，这琴手感和音色，让我兴奋不已，爱不释手，一种强烈的感觉就是，吉他和吉他之间的差距怎么能这么大，以前老以为自己技术不好，处于新手，然后考虑买吉他的时候</p>\r\n\r\n<p>就老是选这考虑买个很便宜的琴，1000以内的琴，业内人士俗称&ldquo;烧火棍&rdquo;。所以我以前一直弹的吉他就输烧火棍。</p>\r\n\r\n<p>以前练琴最多练个两小时，自从入手了新琴之后能够一直练，一口气几小时，毫不费力，越弹越有感觉。哪怕弹一些即兴的东西都是特别带感的。</p>\r\n\r\n<p>我最深切的体会就是，一把好琴，在外观，手感，和音色上，加大了你练琴的欲望，让你更愿意话时间去练琴，花的时间是以前的几倍，你的技术提升的速度当然也会成倍的增长。</p>\r\n\r\n<p>所以给广大吉他爱好者的建议: 在自身条件允许的条件下，一定尽量去买一个趁手的好琴，要不然还不如不买，千万别觉得技术不好，就去某宝上花个几百元去买一根&ldquo;烧火棍&rdquo;。现在的年轻人，今天花</p>\r\n\r\n<p>五六千元买个iPhone6，过段时间又换7，说实在的如果你是吉他爱好者，还不如把这些钱投资在琴上。肺腑之言，全都是自身的感受。</p>\r\n\r\n<p>下面来展示一下我那爱不释手的琴：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/31/content_IMG_3346.JPG\" style=\"width: 600px; height: 400px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n',3,'2017-01-26 13:09:13','2017-03-04 03:44:41',12,'2017-01-14'),(28,'某个大美女画家，给我画的自画像','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/34/content_IMG_3282.JPG\" style=\"width: 490px; height: 700px;\" /></p>\r\n\r\n<p>作者： 成茜</p>\r\n',1,'2017-01-26 13:16:45','2017-02-24 15:47:15',15,'2017-01-10'),(29,'音乐制作与创意合作的未来 ','<p><a href=\"https://medium.com/@pavelc/future-of-music-production-and-creative-collaborations-e0ecea44169c#.wirduf7uk\">原英文文章链接：https://medium.com/@pavelc/future-of-music-production-and-creative-collaborations-e0ecea44169c#.wirduf7uk</a></p>\r\n\r\n<h2 class=\"rich_media_title\" id=\"activity-name\">音乐制作与创意合作的未来</h2>\r\n\r\n<div class=\"rich_media_content \" id=\"js_content\">\r\n<blockquote style=\"margin: 10px 5px;border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 0, 0); padding: 0px 10px; color: rgb(119, 119, 119); quotes: none; margin-left: 1em;\">\r\n<p style=\"margin: 1.5em 5px !important;\"><strong style=\"color: rgb(191, 54, 12);\">创意合作的未来充满想象，尤其音乐。</strong></p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\"><strong style=\"color: rgb(191, 54, 12);\">如果你是音乐家或其他类型的艺术家，你也应该跟我一样兴奋。</strong></p>\r\n</blockquote>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">为什么呢？</p>\r\n\r\n<h3 style=\"font-weight: bold !important; color: rgb(0, 0, 0) !important; text-align: center !important; margin: 1.5em 5px !important; padding: 0.5em 1em !important;font-size: 18px;\">曲目众包。</h3>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">加拿大音乐家 deadmau5 (https://twitter.com/deadmau5) 最近很火，他对他的粉丝直播在工作室所有的一切，他的创作过程绝对透明。这是<strong style=\"color: rgb(191, 54, 12);\">网红直播</strong>对音乐制作领域的影响。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">每次他创作歌曲觉得缺了点什么的时候，他就在微博（twitter）上发布草稿，从而能得粉丝的反馈以及传播。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">一个小时之内，就有追随者演奏歌曲草稿，再重新上传到SoundCloud（编者注：音乐分享平台）。犹如演戏，按照剧本（这里是歌曲的谱子），演员就各司其职，本色出演。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">整个过程都被记录下来，这个故事被她的粉丝和其他音乐制作人在社交网络上病毒式地传播。（当deadmau5看到这种现象的时候，被惊呆了，视频中屡屡爆出粗口）</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">因此，通过Twitter和SoundCloud这种群众自发合作的机制，结束了deadmau5自己官方录制，并给其他晦涩不出名的歌手开辟了大量的新机遇。爽！</p>\r\n\r\n<h3 style=\"font-weight: bold !important; color: rgb(0, 0, 0) !important; text-align: center !important; margin: 1.5em 5px !important; padding: 0.5em 1em !important;font-size: 18px;\">新工具</h3>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">自从我看到这样激动人心的故事之后，我坚信应该有个更简单的方式发现音乐家以及远程协作音乐。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">试着想想，如果有这样一个平台，会产生的创意合作serendipity吧？</p>\r\n\r\n<ol class=\"list-paddingleft-2\" style=\"margin: 10px 5px;padding-left: 15px;\">\r\n	<li>\r\n	<p>具有实时录音以及混音技术</p>\r\n	</li>\r\n	<li>\r\n	<p>能连接所有对音乐协作感兴趣的音乐家社交网络</p>\r\n	</li>\r\n</ol>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">Soundtrap 的Fredrik和Per，他们两就在做点什么。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">Soundtrap (https://www.soundtrap.com/) 是一个新的平台，让音乐家在Web浏览器和跨平台的实时协作。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">众包的音乐制作理念不是新产生的，但令人惊讶从来就没有一个平台使录制歌曲如此简单无缝。一切存储在云中，任何人都可以在笔记本电脑，平板电脑，iPhone和几乎任何连接的设备借助Web浏览器参与进来。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">以前音乐人是使用 Garage Band + 电子邮件，Dropbox 的或 Infiit 这样工具写作，但Soundtrap正在稳步前进并赢得越来越多音乐人信任。<br />\r\n去年的谷歌 I/O 大会特别推荐了 Soundtrap，Soundtrap 正在成为在全球范围内音频创作合作的重要工具。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">你不再需要寻找隔壁的音乐家老王，而是可以得到来自布宜诺斯艾利斯夏威夷某位音乐家足够的帮助，而且是实时的。真正实现你立刻马上就能获得帮助，而不需要等待，大大节省时间成本，提高协作效率。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">可以清楚地看到这究竟有多少新的机会呈现给全球有才华音乐家，想想都让我乐。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\">事实上，瑞典歌手 LIA (http://liamusic.se/) 最近发布一个使用Soundtrap录制和制作的单曲。专业级别的效果，推荐大家看看：</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\"><iframe allowfullscreen=\"\" class=\"video_iframe\" data-src=\"https://v.qq.com/iframe/preview.html?vid=c1309noc8qj&amp;width=500&amp;height=375&amp;auto=0\" data-vidtype=\"2\" frameborder=\"0\" height=\"502.5\" scrolling=\"no\" src=\"http://v.qq.com/iframe/player.html?vid=c1309noc8qj&amp;width=670&amp;height=502.5&amp;auto=0\" style=\"z-index: 1; width: 670px ! important; height: 502.5px ! important; overflow: hidden;\" width=\"670\"></iframe></p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\"><strong style=\"color: rgb(191, 54, 12);\">从未有过比现在更好的时代成为艺术家。</strong>由于新的音乐技术和平台（像Soundtrap），就会有创意表达和协作更多的机会。</p>\r\n\r\n<p style=\"margin: 1.5em 5px !important;\"><strong style=\"color: rgb(191, 54, 12);\">创作快乐！</strong></p>\r\n</div>\r\n',4,'2017-01-26 13:34:31','2017-03-04 03:42:57',22,'2017-01-12'),(30,'一些css — 样式 ','<p>让一行文字多余的部分省略（按....显示）</p>\r\n\r\n<pre class=\"hljs css\">\r\n<span class=\"hljs-class\">.overme</span> <span class=\"hljs-rules\">{</span>\r\n<span class=\"hljs-rules\">    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">width</span>:<span class=\"hljs-value\"> <span class=\"hljs-number\">300px</span></span></span>;</span>\r\n<span class=\"hljs-rules\">    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">overflow</span>:<span class=\"hljs-value\">hidden</span></span>; </span>\r\n<span class=\"hljs-rules\">    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">white-space</span>:<span class=\"hljs-value\">nowrap</span></span>; </span>\r\n<span class=\"hljs-rules\">    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">text-overflow</span>:<span class=\"hljs-value\"> ellipsis</span></span>;</span>\r\n<span class=\"hljs-rules\">    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">color</span>:<span class=\"hljs-value\"> red</span></span>;</span>\r\n<span class=\"hljs-rules\"><span class=\"hljs-rule\">}</span></span></pre>\r\n\r\n<p>让footer置于最底</p>\r\n\r\n<pre class=\"hljs css\">\r\n上面的<span class=\"hljs-tag\">div</span>需要加<span class=\"hljs-tag\">padding-bottom</span><span class=\"hljs-pseudo\">:50px</span>;\r\n<span class=\"hljs-id\">#footer</span> <span class=\"hljs-rules\">{\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">position</span>:<span class=\"hljs-value\"> fixed</span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">height</span>:<span class=\"hljs-value\"><span class=\"hljs-number\">50px</span></span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">bottom</span>:<span class=\"hljs-value\"> <span class=\"hljs-number\">0</span></span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">width</span>:<span class=\"hljs-value\"> <span class=\"hljs-number\">100%</span></span></span>;\r\n<span class=\"hljs-rule\">}</span></span>\r\n</pre>\r\n\r\n<p>让absolute div居中</p>\r\n\r\n<pre class=\"hljs css\">\r\n<span class=\"hljs-id\">#content</span> <span class=\"hljs-rules\">{\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">position</span>:<span class=\"hljs-value\"> absolute</span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">left</span>:<span class=\"hljs-value\"> <span class=\"hljs-number\">0</span></span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">right</span>:<span class=\"hljs-value\"> <span class=\"hljs-number\">0</span></span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">margin-left</span>:<span class=\"hljs-value\"> auto</span></span>;\r\n    <span class=\"hljs-rule\"><span class=\"hljs-attribute\">margin-right</span>:<span class=\"hljs-value\"> auto</span></span>;\r\n<span class=\"hljs-rule\">}</span></span>\r\n</pre>\r\n',2,'2017-01-26 14:34:02','2017-03-02 03:24:43',5,'2016-06-18'),(31,'Rails 的一些基本命令(会不断完善) ','<pre class=\"hljs php\">\r\n<span class=\"hljs-variable\">$rails</span> <span class=\"hljs-keyword\">new</span> blog &nbsp;创建一个新的blog</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rails s -p3333 &nbsp;运行rails服务器</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rails c &nbsp;进入irb调试</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rails g controller users &nbsp;创建一个users表的controller</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rails g model User name:string age:<span class=\"hljs-built_in\">integer</span> &nbsp;创建一个User对象</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rails g scaffold users name:string age:<span class=\"hljs-built_in\">integer</span> &nbsp;users表的脚手架</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$mysql</span> -u username -p password database_name &lt; .sql absolute path &nbsp;将一个.sql文件数据导入一个数据库</pre>\r\n\r\n<pre class=\"hljs perl\">\r\n<span class=\"hljs-variable\">$ps</span> -ef | <span class=\"hljs-keyword\">grep</span> progress_name &nbsp;查看progress_name进程运行情况</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$kill</span> -<span class=\"hljs-number\">9</span> progress_number &nbsp;创建一个新的blog</pre>\r\n\r\n<pre class=\"hljs cpp\">\r\n$bundle exec rails g migration add_column_school_and_class_to_users school:<span class=\"hljs-built_in\">string</span> <span class=\"hljs-keyword\">class</span>:<span class=\"hljs-built_in\">string</span> &nbsp;生成一个向users表增加school和<span class=\"hljs-keyword\">class</span>字段的迁移文件。</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rake db:create &nbsp;创建根据config里面database.yml创建的数据库</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> rake db:migrate &nbsp;运行迁移文件</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$mysql</span>.server start &nbsp;开启mysql数据库</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$bundle</span> <span class=\"hljs-built_in\">exec</span> ruby ruby_script.rb &nbsp;运行一个ruby_script.rb脚本</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-variable\">$redis</span>-cli flushall &nbsp;清除redis所有已经缓存的数据</pre>\r\n',2,'2017-01-26 14:35:23','2017-03-03 11:08:35',4,'2016-06-20'),(32,'Rails — devise 发送修改密码邮件','<p>修改服务器发件人的名称</p>\r\n\r\n<p>config.mailer_sender property in config/devise/devise.rb allows you to specify that. If you don&#39;t have config/devise/devise.rb, run devise:install generator.</p>\r\n\r\n<p>config/initializers/devise.rb</p>\r\n\r\n<pre class=\"hljs bash\">\r\nconfig.mailer_sender = <span class=\"hljs-string\">&#39;330469102@qq.com&#39;</span>&nbsp;&nbsp;&nbsp;\r\n</pre>\r\n\r\n<p>配置服务器地址端口号</p>\r\n\r\n<p>config/environment/development.rb</p>\r\n\r\n<pre class=\"hljs php\">\r\nconfig.action_mailer.default_url_options = {:host =&gt; <span class=\"hljs-string\">&#39;119.254.103.134:3456&#39;</span>}&nbsp;</pre>\r\n\r\n<p>配置smtp信息</p>\r\n\r\n<p>config/environment.rb</p>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-constant\">ActionMailer::Base</span>.delivery_method = <span class=\"hljs-symbol\">:smtp</span>\r\n<span class=\"hljs-symbol\">ActionMailer</span><span class=\"hljs-constant\">::Base</span>.smtp_settings = { \r\n  <span class=\"hljs-symbol\">:address</span> =&gt; <span class=\"hljs-string\">&quot;smtp.163.com&quot;</span>,\r\n  <span class=\"hljs-symbol\">:port</span> =&gt; <span class=\"hljs-number\">25</span>, \r\n  <span class=\"hljs-symbol\">:domain</span> =&gt; <span class=\"hljs-string\">&quot;duxiao.siwei.tech&quot;</span>,\r\n  <span class=\"hljs-symbol\">:user_name</span> =&gt; <span class=\"hljs-string\">&quot;330469102@qq.com&quot;</span>,\r\n  <span class=\"hljs-symbol\">:password</span> =&gt; <span class=\"hljs-string\">&quot;******&quot;</span>\r\n}</pre>\r\n\r\n<p>设置mail信息在app/views/devise/mailer/reset_password_instructions.html.erb</p>\r\n',2,'2017-01-26 14:37:17','2017-02-27 08:11:06',12,'2016-11-18'),(33,'Rails项目使用thin+nginx部署 ','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、git pull</p>\r\n\r\n<pre class=\"hljs\">\r\n&nbsp; &nbsp; 2、bundle\r\n</pre>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 3、config目录下配置datebase.yml 和 log4r.yml</p>\r\n\r\n<pre class=\"hljs perl\">\r\n&nbsp; &nbsp; <span class=\"hljs-number\">4</span>、<span class=\"hljs-keyword\">mkdir</span> <span class=\"hljs-keyword\">log</span></pre>\r\n\r\n<pre class=\"hljs bash\">\r\n&nbsp; &nbsp; <span class=\"hljs-number\">5</span>、bundle <span class=\"hljs-built_in\">exec</span> rake db:create</pre>\r\n\r\n<pre class=\"hljs bash\">\r\n&nbsp; &nbsp; <span class=\"hljs-number\">6</span>、bundle <span class=\"hljs-built_in\">exec</span> rake db:migrate</pre>\r\n\r\n<p>thin &nbsp; &nbsp; 1、在config目录下配置thin.yml文件（注意按情况修改chdir和port还有servers等）</p>\r\n\r\n<pre class=\"hljs javascript\">\r\nchdir: <span class=\"hljs-regexp\">/opt/</span>app/hotel_system\r\nenvironment: production\r\naddress: <span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>\r\nport: <span class=\"hljs-number\">6666</span>\r\ntimeout: <span class=\"hljs-number\">30</span>\r\nmax_conns: <span class=\"hljs-number\">1024</span>\r\nmax_persistent_conns: <span class=\"hljs-number\">100</span> \r\n<span class=\"hljs-built_in\">require</span>: []\r\nwait: <span class=\"hljs-number\">30</span>\r\nservers: 2\r\ndaemonize: <span class=\"hljs-literal\">true</span></pre>\r\n\r\n<p>&nbsp;2、启动thin</p>\r\n\r\n<pre class=\"hljs sql\">\r\nbundle exec thin <span class=\"hljs-operator\"><span class=\"hljs-keyword\">start</span> -C config/thin.yml  （<span class=\"hljs-keyword\">stop</span>/restart）</span></pre>\r\n\r\n<p>nginx &nbsp; &nbsp; 1、配置nginx文件 (/etc/nginx/config.yml &nbsp;或者 /etc/nginx/sites-enabled/特定文件)</p>\r\n\r\n<pre class=\"hljs nginx\">\r\n  <span class=\"hljs-title\">server</span> {\r\n          <span class=\"hljs-title\">listen</span>       <span class=\"hljs-number\">3456</span>;\r\n          <span class=\"hljs-title\">server_name</span>  duxiao.siwei.tech;\r\n          <span class=\"hljs-title\">client_max_body_size</span>       <span class=\"hljs-number\">500m</span>;\r\n          <span class=\"hljs-title\">charset</span> utf-<span class=\"hljs-number\">8</span>;\r\n          <span class=\"hljs-title\">location</span> / { \r\n              <span class=\"hljs-title\">proxy_pass</span>          <span class=\"hljs-url\">http://duxiao_servers</span>;\r\n              <span class=\"hljs-title\">proxy_redirect</span>      default;\r\n              <span class=\"hljs-title\">proxy_set_header</span>    X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\r\n              <span class=\"hljs-title\">proxy_set_header</span>    X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>;\r\n              <span class=\"hljs-title\">proxy_set_header</span>    Host <span class=\"hljs-variable\">$http_host</span>;\r\n              <span class=\"hljs-title\">proxy_next_upstream</span> http_502 http_504 <span class=\"hljs-built_in\">error</span> timeout invalid_header;\r\n          }\r\n  }\r\n  <span class=\"hljs-title\">upstream</span> duxiao_servers{\r\n         <span class=\"hljs-title\">server</span> localhost:<span class=\"hljs-number\">5801</span>;\r\n         <span class=\"hljs-comment\">#server localhost:3701;</span>\r\n<span class=\"hljs-comment\">  }</span></pre>\r\n\r\n<p>&nbsp; 3、重启nginx</p>\r\n\r\n<pre class=\"hljs bash\">\r\nsudo nginx <span class=\"hljs-operator\">-s</span> stop</pre>\r\n\r\n<pre class=\"hljs nginx\">\r\n<span class=\"hljs-title\">sudo</span> nginx&nbsp;</pre>\r\n\r\n<p>加载js和css</p>\r\n\r\n<pre class=\"hljs bash\">\r\nbundle <span class=\"hljs-built_in\">exec</span> rake assets:precompile RAILS=production</pre>\r\n',2,'2017-01-26 14:41:27','2017-02-27 08:08:58',17,'2016-11-28'),(34,'Rails-rspec 单元测试 ','<p>1. add to Gemfile:</p>\r\n\r\n<pre class=\"hljs nginx\">\r\n<span class=\"hljs-comment\"># Gemfile: </span>\r\n<span class=\"hljs-title\">gem</span> <span class=\"hljs-string\">&#39;rspec-rails&#39;</span>, <span class=\"hljs-string\">&#39;~&gt; 3.0.0&#39;</span>\r\n</pre>\r\n\r\n<p>然后运行：</p>\r\n\r\n<pre class=\"hljs bash\">\r\n$ bundle <span class=\"hljs-built_in\">exec</span> rails generate rspec:install\r\n</pre>\r\n\r\n<p>记得要把生成的.rspec 文件做个修改，删掉</p>\r\n\r\n<pre class=\"hljs cpp\">\r\n<span class=\"hljs-preprocessor\"># .rspec file:</span>\r\n--color \r\n<span class=\"hljs-preprocessor\"># NO --<span class=\"hljs-keyword\">warning</span>, --require spec_helper</span>\r\n</pre>\r\n\r\n<h3>单元测试主要针对controller进行测试</h3>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;rails_helper&#39;</span>\r\ndescribe <span class=\"hljs-constant\">AboutsController</span> <span class=\"hljs-keyword\">do</span>\r\n  render_views\r\n\r\n  before <span class=\"hljs-keyword\">do</span>\r\n    admin_login\r\n    request.env[<span class=\"hljs-string\">&quot;HTTP_REFERER&quot;</span>] = root_path\r\n    <span class=\"hljs-variable\">@about</span> = <span class=\"hljs-constant\">About</span>.create <span class=\"hljs-symbol\">:title</span> =&gt; <span class=\"hljs-string\">&#39;关于我们&#39;</span>\r\n  <span class=\"hljs-keyword\">end</span> \r\n\r\n  it <span class=\"hljs-string\">&#39;should get index&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    get <span class=\"hljs-symbol\">:index</span>\r\n    response.should be_success\r\n  <span class=\"hljs-keyword\">end</span> \r\n\r\n  it <span class=\"hljs-string\">&#39;should get show&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    get <span class=\"hljs-symbol\">:show</span>, <span class=\"hljs-symbol\">:id</span> =&gt; <span class=\"hljs-variable\">@about</span>.id\r\n    response.should be_success\r\n    assigns(<span class=\"hljs-symbol\">:about</span>).title.should == <span class=\"hljs-string\">&#39;关于我们&#39;</span>\r\n  <span class=\"hljs-keyword\">end</span> \r\n\r\n  it <span class=\"hljs-string\">&#39;should get new&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    get <span class=\"hljs-symbol\">:new</span>\r\n    response.should be_success\r\n  <span class=\"hljs-keyword\">end</span> \r\n\r\n  it <span class=\"hljs-string\">&#39;should post create&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    title = <span class=\"hljs-string\">&#39;关于我们的最新消息。。。。&#39;</span>\r\n    post <span class=\"hljs-symbol\">:create</span>, <span class=\"hljs-symbol\">:about</span> =&gt; {\r\n      <span class=\"hljs-symbol\">:title</span> =&gt; title,\r\n      <span class=\"hljs-symbol\">:content</span> =&gt; <span class=\"hljs-string\">&#39;我们公司是国内一流的。。。&#39;</span>\r\n    }   \r\n    <span class=\"hljs-constant\">About</span>.last.title.should ==  title\r\n  <span class=\"hljs-keyword\">end\r\n</span>\r\n  it <span class=\"hljs-string\">&#39;should get edit&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    new_title = <span class=\"hljs-string\">&#39;abcd&#39;</span>\r\n    get <span class=\"hljs-symbol\">:edit</span>, <span class=\"hljs-symbol\">:id</span> =&gt; <span class=\"hljs-variable\">@about</span>.id\r\n    response.should be_success\r\n  <span class=\"hljs-keyword\">end</span>\r\n\r\n  it <span class=\"hljs-string\">&#39;should put update&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    new_title = <span class=\"hljs-string\">&#39;abcd&#39;</span>\r\n    put <span class=\"hljs-symbol\">:update</span>, <span class=\"hljs-symbol\">:id</span> =&gt; <span class=\"hljs-variable\">@about</span>.id , <span class=\"hljs-symbol\">:about</span> =&gt; {\r\n      <span class=\"hljs-symbol\">:title</span> =&gt; new_title\r\n    }\r\n    <span class=\"hljs-constant\">About</span>.find(<span class=\"hljs-variable\">@about</span>.id).title.should == new_title\r\n  <span class=\"hljs-keyword\">end</span>\r\n\r\n  it <span class=\"hljs-string\">&#39;should delete destroy&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    size_before_delete = <span class=\"hljs-constant\">About</span>.all.size\r\n    delete <span class=\"hljs-symbol\">:destroy</span>, <span class=\"hljs-symbol\">:id</span> =&gt; <span class=\"hljs-variable\">@about</span>.id\r\n    <span class=\"hljs-constant\">About</span>.count.should == size_before_delete - <span class=\"hljs-number\">1</span>\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span></pre>\r\n\r\n<p><span class=\"hljs-keyword\">tips:</span></p>\r\n\r\n<p>1. 务必使用 &nbsp;$ rails generate rspec:install, 会生成 一个 spec_helper 和一个 rails_helper， 不要改动他们</p>\r\n\r\n<p>2. 务必修改 rails帮你生成好的 &nbsp;rspec文件。 &nbsp;把第一行的 spec_helper 改成 rails_helper</p>\r\n\r\n<pre class=\"hljs coffeescript\">\r\n<span class=\"hljs-comment\">#  require &#39;spec_helper&#39;</span>\r\n<span class=\"hljs-built_in\">require</span> <span class=\"hljs-string\">&#39;rails_helper&lsquo; \r\n</span></pre>\r\n\r\n<p>否则在运行时会报错，找不到rails相关的东西</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-01-26 15:13:36','2017-03-25 10:15:35',22,'2016-12-28'),(35,'为devise 增加单元测试 (devise for spec) ','<p>建立一个 Admin模型。 如果你是默认的Devise, 那就把下面的Admin都替换成 User.&nbsp;</p>\r\n\r\n<p>1. rails_helper中：</p>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-constant\">RSpec</span>.configure <span class=\"hljs-keyword\">do</span> |config|\r\n  \r\n  <span class=\"hljs-comment\"># 增加这一行：</span>\r\n  config.<span class=\"hljs-keyword\">include</span> <span class=\"hljs-constant\">Devise::TestHelpers</span>, <span class=\"hljs-symbol\">:type</span> =&gt; <span class=\"hljs-symbol\">:controller</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> </span>admin_login\r\n  sign_in <span class=\"hljs-constant\">Admin</span>.create(<span class=\"hljs-symbol\">email:</span> <span class=\"hljs-string\">&#39;admin@this.com&#39;</span>, <span class=\"hljs-symbol\">password:</span> <span class=\"hljs-string\">&#39;88888888&#39;</span>)\r\n<span class=\"hljs-keyword\">end</span>\r\nspec/rails_help\r\n</pre>\r\n\r\n<p>spec :</p>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-comment\"># -*- encoding : utf-8 -*-</span>\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;rails_helper&#39;</span>\r\n\r\ndescribe <span class=\"hljs-constant\">SystemSettingsController</span> <span class=\"hljs-keyword\">do</span>\r\n  before <span class=\"hljs-keyword\">do</span>\r\n    admin_login\r\n  <span class=\"hljs-keyword\">end</span> \r\n\r\n  it <span class=\"hljs-string\">&#39;should get index&#39;</span> <span class=\"hljs-keyword\">do</span>\r\n    get <span class=\"hljs-symbol\">:index</span>\r\n    response.should be_success\r\n  <span class=\"hljs-keyword\">end</span> \r\n<span class=\"hljs-keyword\">end</span>\r\n</pre>\r\n',2,'2017-01-26 15:20:30','2017-02-27 07:44:09',16,'2016-12-28'),(36,'rails中添加日志: log4r ','<p>在ruby中，虽然有自带的logger, 但是跟log4j还是有很大距离的。也很麻烦。 所以，就出现了log4r ( log for ruby ).&nbsp;</p>\r\n\r\n<p>使用步骤 1.新建一个log4r的配置文件： config/log4r.yml</p>\r\n\r\n<pre class=\"hljs bash\">\r\n<span class=\"hljs-built_in\">log</span>4r_config:\r\n  <span class=\"hljs-comment\"># define all loggers ...</span>\r\n  loggers:\r\n    - name      : production\r\n      level     : WARN\r\n      trace     : <span class=\"hljs-string\">&#39;false&#39;</span>\r\n      outputters :\r\n      - datefile\r\n    - name      : development\r\n      level     : DEBUG\r\n      trace     : <span class=\"hljs-string\">&#39;true&#39;</span>\r\n      outputters :\r\n      - datefile\r\n\r\n  <span class=\"hljs-comment\"># define all outputters (incl. formatters)</span>\r\n  outputters:\r\n  - <span class=\"hljs-built_in\">type</span>: DateFileOutputter\r\n    name: datefile\r\n    dirname: <span class=\"hljs-string\">&quot;log&quot;</span>\r\n    filename: <span class=\"hljs-string\">&quot;my_app.log&quot;</span> <span class=\"hljs-comment\"># notice the file extension is needed!</span>\r\n    formatter:\r\n      date_pattern: <span class=\"hljs-string\">&#39;%H:%M:%S&#39;</span>\r\n      pattern     : <span class=\"hljs-string\">&#39;%d %l: %m &#39;</span>\r\n      <span class=\"hljs-built_in\">type</span>        : PatternFormatter\r\n</pre>\r\n\r\n<p>2.修改config/application.rb</p>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;rails/all&#39;</span>\r\n<span class=\"hljs-comment\"># add these line for log4r</span>\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;log4r&#39;</span>\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;log4r/yamlconfigurator&#39;</span>\r\n<span class=\"hljs-keyword\">require</span> <span class=\"hljs-string\">&#39;log4r/outputter/datefileoutputter&#39;</span>\r\n<span class=\"hljs-keyword\">include</span> <span class=\"hljs-constant\">Log4r</span>\r\n\r\n<span class=\"hljs-constant\">Bundler</span>.<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-symbol\">:default</span>, <span class=\"hljs-constant\">Rails</span>.env) <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">defined</span>?(<span class=\"hljs-constant\">Bundler</span>)\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">module</span> <span class=\"hljs-title\">Zurich</span></span>\r\n  <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Application</span> <span class=\"hljs-inheritance\">&lt; <span class=\"hljs-parent\">Rails::Application</span></span></span>\r\n    <span class=\"hljs-comment\">#...</span>\r\n    <span class=\"hljs-comment\"># assign log4r&#39;s logger as rails&#39; logger.</span>\r\n    log4r_config= <span class=\"hljs-constant\">YAML</span>.load_file(<span class=\"hljs-constant\">File</span>.join(<span class=\"hljs-constant\">File</span>.dirname(__FILE_<span class=\"hljs-number\">_</span>),<span class=\"hljs-string\">&quot;log4r.yml&quot;</span>))\r\n    <span class=\"hljs-constant\">YamlConfigurator</span>.decode_yaml( log4r_config[<span class=\"hljs-string\">&#39;log4r_config&#39;</span>] )\r\n    config.logger = <span class=\"hljs-constant\">Log4r::Logger</span>[<span class=\"hljs-constant\">Rails</span>.env]\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n</pre>\r\n\r\n<p>3.修改Gemfile, 增加log4r的配置. 注意版本不能低于 1.1.9.否则不支持每日分卷</p>\r\n\r\n<pre class=\"hljs nginx\">\r\n<span class=\"hljs-title\">gem</span> <span class=\"hljs-string\">&#39;log4r&#39;</span>, <span class=\"hljs-string\">&#39;1.1.9&#39;</span>\r\n</pre>\r\n\r\n<p>4.如果你用的是Rails4, 那么需要增加下面这个文件</p>\r\n\r\n<pre class=\"hljs ruby\">\r\n<span class=\"hljs-comment\"># config/initializers/log4r_patch_for_rails4.rb</span>\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Log4r::Logger</span></span>\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> </span>formatter()\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n</pre>\r\n\r\n<p>现在就可以了。 进入到你的 Rails.root, 重启rails, 就会发现log目录开始分卷了。</p>\r\n\r\n<pre class=\"hljs cpp\">\r\nMay  <span class=\"hljs-number\">9</span> <span class=\"hljs-number\">17</span>:<span class=\"hljs-number\">05</span> rails_2011-<span class=\"hljs-number\">05</span>-<span class=\"hljs-number\">09.l</span>og\r\nMay <span class=\"hljs-number\">10</span> <span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">42</span> rails_2011-<span class=\"hljs-number\">05</span>-<span class=\"hljs-number\">10.l</span>og\r\n</pre>\r\n\r\n<p>日志的内容看起来如下：</p>\r\n\r\n<pre class=\"hljs cpp\">\r\n$ tail <span class=\"hljs-built_in\">log</span>/rails_2011-<span class=\"hljs-number\">05</span>-<span class=\"hljs-number\">10.l</span>og\r\nStarted GET <span class=\"hljs-string\">&quot;/????_settings/19/edit&quot;</span> <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span> at ...\r\n<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">42</span>:<span class=\"hljs-number\">11</span> INFO:   Processing by ????SettingsController ...\r\n<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">42</span>:<span class=\"hljs-number\">11</span> INFO:   Parameters: {<span class=\"hljs-string\">&quot;id&quot;</span>=&gt;<span class=\"hljs-string\">&quot;19&quot;</span>}\r\n<span class=\"hljs-number\">13</span>:<span class=\"hljs-number\">42</span>:<span class=\"hljs-number\">12</span> DEBUG:   ????<span class=\"hljs-function\">Setting <span class=\"hljs-title\">Load</span> <span class=\"hljs-params\">(0.0ms)</span>  SELECT &quot;d ...\r\n13:42:12 INFO: Completed 200 OK in 750ms\r\n</span></pre>\r\n',2,'2017-01-26 15:59:17','2017-03-20 23:43:09',21,'2016-12-30'),(37,'用ruby代码生成一串32位带有数字字母大小写的随机字符串','<pre>\r\n((&#39;a&#39;..&#39;z&#39;).to_a + (&#39;A&#39;..&#39;Z&#39;).to_a + (0..9).to_a).shuffle[0,32].join</pre>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/35/content_shuffle.png\" style=\"width: 800px; height: 38px;\" /></p>\r\n',2,'2017-02-18 02:05:35','2017-03-02 16:18:36',7,'2017-02-06'),(38,'重置mysql的默认密码','<p>1.先关掉mysql的进程。</p>\r\n\r\n<pre>\r\n<strong><code>kill &lsquo;cat /mysql-data-directory/host_name.pid&rsquo;</code></strong>\r\n</pre>\r\n\r\n<p>2.MySQL 5.7.6 and later:</p>\r\n\r\n<pre>\r\nALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;MyNewPass&#39;;</pre>\r\n\r\n<p>MySQL 5.7.5 and earlier:</p>\r\n\r\n<pre>\r\nSET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;MyNewPass&#39;);</pre>\r\n\r\n<p>3.在home目录下新建一个文件mysql-init，在里面填写上面这条命令，如：</p>\r\n\r\n<pre>\r\nALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;666666&#39;;</pre>\r\n\r\n<p>4.在终端中输入：</p>\r\n\r\n<pre>\r\n<strong><code>mysqld_safe --init-file=/home/mysql-init</code></strong></pre>\r\n\r\n<p>5.成功修改后输入：</p>\r\n\r\n<pre>\r\nmysql -u root -p&nbsp;</pre>\r\n\r\n<p>输入新密码666666 链接成功</p>\r\n',2,'2017-02-27 07:33:49','2017-03-02 16:16:52',3,'2017-02-07'),(39,'mysql: command not found','<p>在官方网站中下载mysql的dmg包安装后，终端中找不到mysqk的路径，所以需要在 ~/.bash_profile中输入：</p>\r\n\r\n<pre>\r\nexport PATH=${PATH}:/usr/local/mysql/bin</pre>\r\n',2,'2017-02-27 07:39:16','2017-03-02 16:16:26',2,'2017-02-08'),(40,'在chrome浏览器中翻墙 SSL','<p>安装 chrome和翻墙工具eurekavpt</p>\r\n\r\n<p>下载 chrome插件: pan.baidu.com/s/1bn5CrBx 安装后,</p>\r\n\r\n<p>浏览器右上角 自定义及控制-更多工具-扩展程序</p>\r\n\r\n<p>把插件直接拖到chrome中的扩展程序。&nbsp;</p>\r\n\r\n<p>如果拖进来用不了，就把dict.crx改成dict.zip压缩包，再解压，在chrome中加载已解压的扩展程序。</p>\r\n\r\n<p>将压缩文件解压到指定文件夹：</p>\r\n\r\n<pre>\r\nunzip dict.zip -d /dir</pre>\r\n\r\n<p>使用 chrome 插件时的用户名： happysoft.cn631e 密码 :88</p>\r\n',2,'2017-02-27 08:08:16','2017-03-02 16:20:29',4,'2017-02-10'),(41,'世界上最牛的编辑器：vim  快捷键','<p>- ctrl + t 快速打开 ， 输入 **/vim 就能打开所有文件名中包含vim 的文件- ctrl + t 快速打开 ， 输入 **/vim 就能打开所有文件名中包含vim 的文件</p>\r\n\r\n<p>- ctrl + e 打开的历史文件记录</p>\r\n\r\n<p>- Gsearch 全局搜索，并且有替换的功能，</p>\r\n\r\n<p>- ctrl + c rails项目中，调到对应的controller</p>\r\n\r\n<p>- ctrl + v rails项目中，调到对应的view</p>\r\n\r\n<p>- ctrl + m rails项目中，调到对应的model</p>\r\n\r\n<p>- ctrl + u rails项目中，调到对应的controller spec. (测试文件)</p>\r\n\r\n<p>- ,a 打开历史的复制列表。</p>\r\n\r\n<p>- ,cb 把选中的行给注释掉。</p>\r\n\r\n<p>- ,t 打开左侧菜单。</p>\r\n\r\n<p>- :set paste 粘贴模式</p>\r\n\r\n<p>-ctrl+n 提示补全</p>\r\n\r\n<p>具体的请参考：<a href=\"http://www.imooc.com/article/13275\">http://www.imooc.com/article/13275</a></p>\r\n',2,'2017-02-27 08:14:30','2017-03-16 06:34:40',4,'2017-02-09'),(42,'将远程服务器上的sql数据复制到本地数据库','<p>1.在本地rails项目中输入 scp -P（remote server):~/databases/xxxxxx.sql .（指定文件夹）&nbsp;将远程的sql 数据文件拷到本地了。&nbsp; 如：</p>\r\n\r\n<pre>\r\nscp -P 37877 zhidaoyuan@zdyentry.cassi.org.cn:~/databases_backup/zhidaoyuan-2017_02_27_15_00_01.sql . </pre>\r\n\r\n<p>2.然后本地输入 :</p>\r\n\r\n<pre>\r\nmysql -u root -p(本地数据库密码)&nbsp;zhidaoyuan(数据库名称) &lt; zhidaoyuan-2017_02_27_15_00_01.sql\r\n如：&nbsp;mysql -u root -p666666 happystock_web &lt; db/initial_data.sql</pre>\r\n\r\n<p>本地数据库就有远程的数据了</p>\r\n\r\n<p>3.把当前项目的数据表格，作为初始化的数据。备份当前的数据库sql文件到本地rails项目。</p>\r\n\r\n<pre>\r\nmysqldump&nbsp;-u root -p666666 happystock_web &gt;&nbsp;db/initial_data.sql&nbsp;</pre>\r\n\r\n<p>4.把本地的 sql 文件传到远程的项目目录下 ：</p>\r\n\r\n<pre>\r\nscp -P 36888（端口） db/fetch_code.sql root@47.91.156.176:/opt/app/topgroup_web/current/db</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-02-27 09:49:53','2017-04-01 01:25:02',22,'2017-02-10'),(43,'如何写 rails script 脚本--省市县三级联动，修改cities,towns表中的数据','<p>省市县三级联动时，对于直辖市而言就没有县级，例如： 北京-朝阳区-无， 我们要把直辖市改成，如：北京-北京-朝阳区。</p>\r\n\r\n<p>思路：</p>\r\n\r\n<pre>\r\n1. 把直辖市的名字，写入到 cities。\r\n\r\n2. 在cities中的直辖市的各个区，写入到 town 中。\r\n\r\n3. 把 cities 中的直辖市的各个区，都删掉。</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>rails script的格式如下：</p>\r\n\r\n<p>1.在rails项目中,新建一个script文件夹，创建一个 xxx.rb文件。</p>\r\n\r\n<p>2.在文件中添加固定的代码：</p>\r\n\r\n<pre>\r\n&nbsp; # -*- encoding : utf-8 -*-\r\n&nbsp;&nbsp;require File.expand_path(File.dirname(__FILE__) + &quot;/../config/environment&quot;)\r\n&nbsp; require &#39;rails&#39;\r\n\r\n  Rails.logger.info &quot;=== before &quot;\r\n  实现代码.................................\r\n  Rails.logger.info &quot;=== done&quot;\r\n&nbsp; puts &quot;done&quot;\r\n&nbsp;</pre>\r\n\r\n<p>实现代码如下：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/37/content_屏幕快照_2017-03-01_上午9.33.24.png\" style=\"width: 800px; height: 487px;\" /></p>\r\n\r\n<p>然后在终端中，运行这个脚本文件：</p>\r\n\r\n<pre>\r\nbundle exec ruby script/xxx.rb</pre>\r\n\r\n<p>最后在workbench中查看数据</p>\r\n',2,'2017-03-01 01:27:50','2017-03-10 06:16:13',9,'2017-03-01'),(44,'如何在rails项目中实现省市县三级联动','<p>1.首先在数据库中建三张表，provinces, cities, towns.表间关系都是一对多。</p>\r\n\r\n<p>2.需要写一个脚本，向三张表中添加省市县的数据。</p>\r\n\r\n<p>&nbsp; &nbsp; 在model中新建一个文件，tool.rb.添加：&nbsp;</p>\r\n\r\n<pre>\r\nclass Tool &lt; ActiveRecord::Base\r\n  def self.init_province_city_and_town\r\n    require &#39;httparty&#39;\r\n    # 定义URL\r\n    url = &quot;http://www.helloweba.com/demo/cityselect/js/city.js&quot;\r\n    response = HTTParty.get url\r\n    #puts &quot;======== #{response.body} ===========&quot;\r\n    # 获取 到结果\r\n    items = JSON.parse(response.body) rescue []\r\n    Province.transaction do\r\n      return if items.blank?\r\n      items[&#39;citylist&#39;].each do |province|\r\n        province_name = province[&#39;p&#39;]\r\n        @province = Province.create :name =&gt; province_name\r\n        Rails.logger.info &quot;province ==!!!!==!!!!!== #{province_name}&quot;\r\n        next if province[&#39;c&#39;].blank?    \r\n        City.transaction do    \r\n          province[&#39;c&#39;].each do |city|    \r\n            city_name = city[&#39;n&#39;]           \r\n            @city = City.create :name =&gt; city_name, :province_id =&gt; @province.id\r\n            Rails.logger.info &quot;city ======== #{city_name}&quot;\r\n            next if city[&#39;a&#39;].blank?        \r\n            Town.transaction do\r\n              city[&#39;a&#39;].each do |town|        \r\n                town_name= town[&#39;s&#39;]            \r\n                @town = Town.create :name =&gt; town_name, :city_id =&gt; @city.id \r\n                Rails.logger.info &quot;town ======== #{town_name}&quot;\r\n              end              \r\n            end                \r\n          end                  \r\n        end                    \r\n      end                      \r\n    end\r\n  end\r\nend\r\n</pre>\r\n\r\n<p>在rails console中输入：</p>\r\n\r\n<pre>\r\nTool.init_province_city_and_town</pre>\r\n\r\n<p>这样省市县就都初始化成功了。</p>\r\n\r\n<p>3.接下来就开始实现三级联动。 &nbsp;在app/assets/javascript/province_city_town.js &nbsp;设置一个全局的js,全局使用三级联动。</p>\r\n\r\n<pre>\r\n$( document ).ready(function() {\r\n    $(&quot;#manager_province_id&quot;).change(function () {\r\n        if ($(this).val()) {\r\n            get_cities_by_province_id($(this).val());\r\n        }\r\n    });\r\n\r\n    $(&quot;#manager_city_id&quot;).change(function () {\r\n        if ($(this).val()) {\r\n            get_towns_by_city_id($(this).val());\r\n        }\r\n    });\r\n\r\n    function get_cities_by_province_id(province_id) {\r\n        $.ajax({\r\n            type: &#39;get&#39;,\r\n            url: &#39;/users/get_cities_by_province_id?province_id=&#39; + province_id,\r\n            success: function (data) {\r\n                $(&quot;#manager_city_id&quot;).html(data);\r\n            },\r\n            error: function () {\r\n                alert(&quot;fail！&quot;);\r\n            }\r\n        });\r\n    }\r\n\r\n    function get_towns_by_city_id(city_id) {\r\n        $.ajax({\r\n            type: &#39;get&#39;,\r\n            url: &#39;/users/get_towns_by_city_id?city_id=&#39; + city_id,\r\n            success: function (data) {\r\n                $(&quot;#manager_town_id&quot;).html(data);\r\n            },\r\n            error: function () {\r\n                alert(&quot;fail！&quot;);\r\n            }\r\n        });\r\n    }\r\n});\r\n</pre>\r\n\r\n<p>4.在app/controllers/users_controller 中添加方法：</p>\r\n\r\n<pre>\r\n&nbsp;\r\ndef get_cities_by_province_id\r\n  @cities = City.where(:province_id =&gt; params[:province_id])\r\n  render :layout =&gt; false\r\nend\r\n    \r\ndef get_towns_by_city_id     \r\n  @towns = Town.where(:city_id =&gt; params[:city_id])\r\n  render :layout =&gt; false    \r\nend</pre>\r\n\r\n<p>5.在对应的 views/users/get_cities_by_province_id.html.erb &nbsp;,views/users/get_towns_by_city_id.html.erb中分别添加：</p>\r\n\r\n<pre>\r\n&lt;%= options_from_collection_for_select <b>@cities</b>, :id, :name&nbsp; %&gt;\r\n\r\n&lt;%= options_from_collection_for_select <b>@towns</b>, :id, :name&nbsp; %&gt;</pre>\r\n\r\n<p>6.在需要三级联动的view 页面，添加：</p>\r\n\r\n<pre>\r\n&lt;%= f.select :province_id, options_from_collection_for_select(Province.all, :id, :name), {:include_blank=&gt;&quot;请选择省份&quot;}, :style =&gt; &quot;width: 115px;&quot;%&gt;\r\n&lt;%= f.select :province_id, options_from_collection_for_select([], :id, :name), {:include_blank=&gt;&quot;请选择城市&quot;}, :style =&gt; &quot;margin-left: 20px; width: 115px;&quot;%&gt;\r\n&lt;%= f.select :province_id, options_from_collection_for_select([], :id, :name), {:include_blank=&gt;&quot;请选择乡镇&quot;}, :style =&gt; &quot;margin-left: 20px; width: 115px;&quot; %&gt;\r\n</pre>\r\n\r\n<p>省市县三级联动就完成了</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/38/content_屏幕快照_2017-03-01_上午10.44.35.png\" style=\"width: 499px; height: 55px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-03-01 01:46:12','2017-03-03 03:42:12',5,'2017-03-01'),(45,'在vim中，针对多个文件进行查找和替换','<p>1.Gsearch -F &#39;要替换的字符串&#39; . -R --include=*rb</p>\r\n\r\n<p>&nbsp; 这里的&nbsp;-F,&nbsp;-R --include=*rb&nbsp;这些参数，跟grep中的一样。</p>\r\n\r\n<p>2.在返回的结果中，把该替换的替换。</p>\r\n\r\n<p>3.Greplace&nbsp;然后选择&nbsp;y/a/n&nbsp;来决定是否替换。</p>\r\n\r\n<p>4.最后， 输入&nbsp;wa&nbsp;保存所有文件的改动。</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-03-06 08:35:06','2017-03-26 19:43:43',7,'2017-03-04'),(46,'rails 项目增加日志功能(log)','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/39/content_屏幕快照_2017-03-08_下午3.46.48.png\" style=\"width: 800px; height: 348px;\" /></p>\r\n\r\n<p>操作日志是几乎每一个项目所必须要有的，上图就是效果图。</p>\r\n\r\n<p>下面是rails中的增加步骤:</p>\r\n\r\n<p>1. Gemfile中：</p>\r\n\r\n<pre>\r\ngem &#39;kaminari&#39;</pre>\r\n\r\n<p>2. config/routes.rb</p>\r\n\r\n<pre>\r\n namespace &quot;monitor&quot; do\r\n    resources &quot;logs&quot;\r\n  end </pre>\r\n\r\n<p>3. app/controllers/monitor/logs_controller.rb :</p>\r\n\r\n<pre>\r\nclass Monitor::LogsController &lt; ApplicationController\r\n  def index\r\n    @logs = OperationLog.order(&#39;created_at desc&#39;).page(params[:page]).per(100)\r\n  end\r\nend</pre>\r\n\r\n<p>4. app/views/monitor/logs/index.hml.erb:</p>\r\n\r\n<pre>\r\n&lt;h3&gt;操作日志&lt;/h3&gt;\r\n&lt;%= paginate @logs %&gt; \r\n&lt;table &gt;\r\n  &lt;tr&gt;\r\n    &lt;th&gt;controller&lt;/th&gt;\r\n    &lt;th&gt;action&lt;/th&gt;\r\n    &lt;th&gt;时间&lt;/th&gt;\r\n    &lt;th&gt;用户名&lt;/th&gt;\r\n    &lt;th&gt;详情&lt;/th&gt;\r\n  &lt;/tr&gt;\r\n  &lt;% @logs.each do |log| %&gt;\r\n  &lt;tr&gt;\r\n    &lt;td&gt;&lt;%= log.controller %&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;%= log.action %&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;%= log.created_at.strftime &#39;%y-%m-%d %H:%M:%S&#39; %&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;%= log.user_name %&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;%= log.parameters %&gt;&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n  &lt;% end %&gt;    \r\n&lt;/table&gt;\r\n&lt;%= paginate @logs %&gt;\r\n</pre>\r\n\r\n<p>5. lib/loggable_controller:</p>\r\n\r\n<pre>\r\nmodule LoggableController\r\n  def save_log\r\n    controller = params[:controller]\r\n    action = params[:action]\r\n    request_type = restful_method(params)\r\n    OperationLog.create!(:action =&gt; action, :controller =&gt; controller,\r\n        :user_name =&gt; current_user.try(:email),\r\n        :parameters =&gt;  params.inspect,\r\n        :remote_ip=&gt; request.remote_ip,\r\n        :restful_method =&gt; restful_method(params)\r\n    )   \r\n  end \r\n\r\n  private\r\n\r\n  # return: get, post, put or delete\r\n  def restful_method(params)\r\n    return request.method.downcase\r\n    #params[:authenticity_token].blank? ? &#39;get&#39; : ((params[:_method]) || &#39;post&#39;)\r\n  end\r\nend</pre>\r\n\r\n<p>6. 然后,在 app/controller/application_controller 中:&nbsp;</p>\r\n\r\n<pre>\r\nclass ApplicationController &lt; ActionController::Base\r\n  include LoggableController\r\n  before_filter :save_log\r\nend</pre>\r\n\r\n<p>7. 在 config/initializers/loggable_controller.rb中:</p>\r\n\r\n<pre>\r\nDir[Rails.root + &#39;lib/loggable_controller.rb&#39;].each do |file|\r\n  require file\r\nend\r\n</pre>\r\n\r\n<p>8 . 创建 logs表:</p>\r\n\r\n<pre>\r\nclass CreateLogs &lt; ActiveRecord::Migration\r\n  def change\r\n    create_table :logs do |t| \r\n      t.string :controller\r\n      t.string :action\r\n      t.string :user_name\r\n      t.text :parameters\r\n      t.datetime :created_at\r\n    end \r\n  end \r\nend\r\n</pre>\r\n\r\n<p>9.创建 app/models/log.rb</p>\r\n\r\n<pre>\r\n# -*- encoding : utf-8 -*-\r\nclass Log &lt; ActiveRecord::Base\r\nend</pre>\r\n\r\n<p>10. 创建 migration $ bundle exec rails g migration create_operation_logs</p>\r\n\r\n<pre>\r\nclass CreateOperationLogs &lt; ActiveRecord::Migration\r\n  def change\r\n    create_table :operation_logs, :comment =&gt; &#39;操作日志表&#39; do |t|\r\n      t.string :controller\r\n      t.string :action\r\n      t.string :remote_ip, :comment =&gt; &#39;远程ip&#39;\r\n      t.string :restful_method, :comment =&gt; &#39;请求的方法,  get/post...&#39;\r\n      t.string :user_name, :comment =&gt; &#39;当前用户&#39;\r\n      t.text :parameters, :comment =&gt; &#39;各种参数&#39;\r\n      t.datetime :created_at, :comment =&gt; &#39;创建时间&#39;\r\n    end\r\n  end\r\nend\r\n</pre>\r\n',2,'2017-03-08 08:01:22','2017-03-26 19:41:55',4,'2017-03-08'),(47,'Linux cp命令 拷贝文件','<p><a href=\"http://lib.csdn.net/base/linux\" target=\"_blank\" title=\"Linux知识库\">Linux</a>&nbsp;cp命令拷贝命令非常实用，cp命令可以将指定路径下的文件（目录）拷贝到（成）另一文件或目录中，相当于DOS下COPY和XCOPY命令。cp命令语法如下：</p>\r\n\r\n<p>cp [options] &lt;source file or directory&gt; &lt;target file or directory&gt;<br />\r\n或<br />\r\ncp [options] source1 source2 source3 &hellip;. directory<br />\r\n上面第一条命令为单个文件或目录拷贝，下一个为多个文件拷贝到最后的目录。<br />\r\noptions选项包括：<br />\r\n- a 保留链接和文件属性，递归拷贝目录，相当于下面的d、p、r三个选项组合。<br />\r\n- d 拷贝时保留链接。<br />\r\n- f 删除已经存在目标文件而不提示。<br />\r\n- i 覆盖目标文件前将给出确认提示，属交互式拷贝。<br />\r\n- p 复制源文件内容后，还将把其修改时间和访问权限也复制到新文件中。<br />\r\n- r 若源文件是一目录文件，此时cp将递归复制该目录下所有的子目录和文件。当然，目标文件必须为一个目录名。<br />\r\n- l 不作拷贝，只是链接文件。<br />\r\n-s 复制成符号连结文件 (symbolic link)，亦即『快捷方式』档案；<br />\r\n-u 若 destination 比 source 旧才更新 destination。<br />\r\ncp命令使用范例：<br />\r\n1、将文档 file1复制成file2，复制后名称被改file2<br />\r\ncp -i file1 file2<br />\r\n或，<br />\r\ncp file1 file2<br />\r\n2、将文档 file1复制到dir1目录下，复制后名称仍未file1<br />\r\ncp -i file1 dir1<br />\r\n或，<br />\r\ncp file1 dir1<br />\r\n3、将目录dir1复制到dir2目录下，复制结果目录被改名为dir2<br />\r\ncp -r dir1 dir2<br />\r\n4、将目录dir1下所有文件包括文件夹，都复制到dir2目录下<br />\r\ncp -r dir1/*.* dir2<br />\r\n常见错误：<br />\r\n1、提示cp: omitting directory错误<br />\r\n复制目录时，使用-r选项即可递归拷贝，如下：<br />\r\ncp -r dir1 dir2</p>\r\n',2,'2017-03-08 08:24:45','2017-03-26 19:43:11',5,'2017-03-08'),(48,'Rails: update_attribute vs update_attributes','<pre>\r\n<code>Object.update_attribute(:only_one_field, &quot;Some Value&quot;)\r\nObject.update_attributes(:field1 =&gt; &quot;value&quot;, :field2 =&gt; &quot;value2&quot;, :field3 =&gt; &quot;value3&quot;)</code></pre>\r\n',2,'2017-03-11 10:12:24','2017-03-26 19:45:29',1,'2017-03-08'),(49,'rails 如何切换语言 使用i18n,中文，英文，zh-CN, en','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/42/content_屏幕快照_2017-03-11_下午7.47.45.png\" style=\"width: 800px; height: 132px;\" /></p>\r\n\r\n<p>1.第一步在用户表editor中，添加language字段。</p>\r\n\r\n<p>2.登录进去，首页出现选择语言的页面。用户controller名字是editor,首先设置路由：</p>\r\n\r\n<pre>\r\n&nbsp;\r\n  resources :editors do\r\n    collection do\r\n      get :welcome\r\n      post :language\r\n    end \r\n  end \r\n</pre>\r\n\r\n<p>3.设置对应controller的action :</p>\r\n\r\n<pre>\r\n&nbsp;\r\n  def welcome                  \r\n    @editor = current_editor   \r\n  end\r\n\r\n  def language                 \r\n    @editor = current_editor   \r\n    @editor.update_attributes(:language =&gt; params[:language])\r\n    redirect_to root_path      \r\n  end\r\n</pre>\r\n\r\n<p>4.对应的erb 页面 &nbsp;welcome.html.erb: （要在对应的 &nbsp;locales/yml 文件中设置好 i18n才能调用）</p>\r\n\r\n<p><b>&lt;</b>p<b>&gt;</b>&lt;%= t(&#39;choose_your_language&#39;) %&gt;: <b>&lt;/</b>p<b>&gt;</b></p>\r\n\r\n<p>&lt;%= form_for <b>@editor</b>, url: language_editors_path, html: {method: &#39;post&#39;} do |<b>f</b>| %&gt;</p>\r\n\r\n<p>&nbsp; <b>&lt;</b>div<b> </b>class<b>=</b>&quot;form-group&quot;<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &lt;%= select_tag :language, options_for_select([[&quot;English&quot;, &#39;en&#39;], [&quot;中文(Chinese)&quot;, &#39;zh-CN&#39; ]] ), class: &#39;form-control&#39;%&gt;</p>\r\n\r\n<p>&nbsp; <b>&lt;</b>div<b> </b>class<b>=</b>&quot;actions&quot;<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &lt;%= f.submit t(&#39;global.submit&#39;), class: &#39;btn btn-primary&#39; %&gt;</p>\r\n\r\n<p>&nbsp; <b>&lt;/</b>div<b>&gt;</b></p>\r\n\r\n<p>&lt;% end %&gt;</p>\r\n\r\n<p>5.在 application_controller 中添加一个方法 &nbsp;，为所有的url 设置一个默认的参数 ， 如 ？locale = &quot;zh-CN&quot;</p>\r\n\r\n<pre>\r\n  def default_url_options      \r\n    Rails.logger.info &quot;=====#{current_editor.language}&quot;\r\n    { locale: &quot;#{current_editor.language}&quot; }\r\n  end\r\n</pre>\r\n\r\n<p>6.这样就能自由切换语言了。</p>\r\n\r\n<p>7. 设置locales/zh-CN.yml &nbsp;如下：</p>\r\n\r\n<pre>\r\ncategory:\r\n    name: 名称                 \r\n    order: 排序\r\n    status: 状态\r\n    operation: 操作            \r\n\r\n  article:\r\n    title: 标题                \r\n    category: 栏目             \r\n    status: 状态\r\n    order: 排序                \r\n    created_at: 时间           \r\n    operation: 操作            \r\n    new_text_button: 新建图文新闻   \r\n    new_video_button: 新建视频新闻  \r\n    new_text:                  \r\n      language: 语言           \r\n      source: 来源             \r\n      link: 外链               \r\n      text: 正文               \r\n    new_video:\r\n      language: 语言\r\n      cover: 视频封面\r\n      link: 视频地址\r\n      text: 正文\r\n</pre>\r\n\r\n<p>8.在rails中用以下方式就可以调用</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;<b>&lt;</b>th<b>&gt;</b>&lt;%= t(&#39;category.name&#39;) %&gt;<b>&lt;/</b>th<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; <b>&lt;</b>th<b>&gt;</b>&lt;%= t(&#39;category.order&#39;) %&gt;<b>&lt;/</b>th<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; <b>&lt;</b>th<b>&gt;</b>&lt;%= t(&#39;category.status&#39;) %&gt;<b>&lt;/</b>th<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; <b>&lt;</b>th<b>&gt;</b>&lt;%= t(&#39;category.operation&#39;) %&gt;<b>&lt;/</b>th<b>&gt;</b></p>\r\n',2,'2017-03-11 12:06:00','2017-03-26 19:44:50',5,'2017-03-09'),(50,'如何搭建 node,vue h5项目的环境','<p>1.首先得安装nvm ,用来管理node 的安装.</p>\r\n\r\n<pre>\r\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</pre>\r\n\r\n<p>2.在home 目录下新建一个文件 .bash_profile</p>\r\n\r\n<p>touch ~/.bash_profile</p>\r\n\r\n<p>并添加一下内容：（添加内容之后，记得重启终端，要不然会出现。cant find nvm）</p>\r\n\r\n<pre>\r\nexport NVM_DIR=&quot;$HOME/.nvm&quot;\r\n[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm</pre>\r\n\r\n<p>3.安装nvm 后，运行命令安装 node :</p>\r\n\r\n<p>用nvm安装node v6.9.1 如果没有这个版本的node: &nbsp; &nbsp;$ nvm install v6.9.1 &nbsp; &nbsp;如果有的话，可以直接在当前目录运行: $ nvm use 6.9.1 切换版本</p>\r\n\r\n<p>4.接下用npm安装vue, vue-cli, vue-router等等 ( vue-router &gt; 2.0)：</p>\r\n\r\n<p>npm install -g vue-cli</p>\r\n\r\n<p>5.clone 项目:</p>\r\n\r\n<pre>\r\n<code> 6.1 $ npm install\r\n 6.2 $ npm run dev</code></pre>\r\n',2,'2017-03-15 09:21:01','2017-03-26 19:42:11',4,'2017-03-10'),(51,'使用 jquery password strength + jquery 对密码强度做校验','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/43/content_屏幕快照_2017-03-16_下午2.07.46.png\" style=\"width: 622px; height: 404px;\" /></p>\r\n\r\n<p>首先把pwstrength-bootstrap.js 拷贝到本地的rails项目中 asset:</p>\r\n\r\n<p><a href=\"https://cdn.bootcss.com/pwstrength-bootstrap/2.0.8/pwstrength-bootstrap.js\">https://cdn.bootcss.com/pwstrength-bootstrap/2.0.8/pwstrength-bootstrap.js</a></p>\r\n\r\n<p>在application.js中引用：</p>\r\n\r\n<pre>\r\n&nbsp;//= require pwstrength-bootstrap.js&nbsp;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>１．　确保你的输入密码div (id=&#39;pwd-container&#39;)区域中：</p>\r\n\r\n<pre>\r\n      &lt;div class=&quot;control-group&quot; id=&#39;pwd-container&#39;&gt;\r\n        &lt;%= f.label &quot;密码&quot;, :class =&gt; &#39;control-label&#39; %&gt;\r\n        &lt;div id=&#39;password_messages&#39; style=&#39;color:red&#39;&gt;&lt;/div&gt;\r\n        &lt;div class=&quot;controls&quot; style=&#39;&#39;&gt;\r\n          &lt;%= f.password_field :password, :class =&gt; &#39;form-control&#39;, :placeholder=&gt;&quot;请输入密码&quot;, autocomplete: &quot;off&quot; %&gt;\r\n        &lt;/div&gt;\r\n        &lt;div id=&#39;pwstrength_viewport_progress&#39; style=&#39;width: 150px; display: inline-block&#39;&gt;密码强度：&lt;/div&gt;\r\n      &lt;/div&gt;</pre>\r\n\r\n<p>2. 　在对应的erb页面加入下面的js:（仅针对password 的强度做校验)：</p>\r\n\r\n<pre>\r\n var options = {};\r\n    options.ui = {\r\n      container: &quot;#pwd-container&quot;,\r\n      showVerdictsInsideProgressBar: true,\r\n      viewports: {\r\n        progress: &quot;#pwstrength_viewport_progress&quot;\r\n      }\r\n    };\r\n    options.common = {\r\n      debug: true,\r\n      onLoad: function () {\r\n        $(&#39;#password_messages&#39;).text(&#39;请输入密码，大小写字母外加特殊符号(@,#,-等)，８位以上&#39;);\r\n      },\r\n      onKeyUp: function (evt, data) {\r\n        if(data.score &gt; 35) {              // 可以根据当前的校验分数做一些事情\r\n          $(&#39;#password_messages&#39;).hide();\r\n        }else{\r\n          $(&#39;#password_messages&#39;).show();\r\n        }\r\n      },\r\n    };\r\n\r\n    $(&#39;:password&#39;).pwstrength(options);   // 对于所有的password项都增加这个校验， 指定的密码验证，就加上指定的id.</pre>\r\n\r\n<p>3.&nbsp;与jquery validate 表单验证做集成，　增加这段js:&nbsp;</p>\r\n\r\n<pre>\r\n  $.validator.addMethod(\r\n    &quot;is_password_strong_enough&quot;,\r\n    function(value, element) {\r\n      return $(&#39;.password-verdict&#39;).text().match(&#39;强&#39;)\r\n    },\r\n    &quot;密码强度必须是&#39;强&#39;或 &#39;非常强&#39;&quot;\r\n  );\r\n\r\n  $(&quot;form&quot;).validate({\r\n      rules: {\r\n        &quot;user[password]&quot;: &quot;is_password_strong_enough&quot;,\r\n        &quot;user[password_confirmation]&quot;: {\r\n          equalTo : &quot;#user_password&quot;     //jquery validate password confirmation\r\n        },\r\n        &quot;user[current_password]&quot;: &quot;required&quot;\r\n      },\r\n      messages: {\r\n        &quot;user[password]&quot;:&quot;密码强度必须是&#39;强&#39;或 &#39;非常强&#39;&quot;,\r\n        &quot;user[password_confirmation]&quot;: {\r\n          equalTo: &quot;请确认两次输入密码一致&quot;\r\n        },\r\n        &quot;user[current_password]&quot;: &quot;请输入原密码&quot;\r\n      }\r\n  });\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-03-16 05:59:04','2017-03-26 19:44:16',5,'2017-03-15'),(52,'Linux 的一些常见的命令 如cp , zip  等等','<p><strong>zip命令的基本用法是：zip [参数] [文件1] [文件2]</strong></p>\r\n\r\n<p><strong>简单的例子：</strong></p>\r\n\r\n<p>把本目录下的test文件打包成test.zip文件：zip test.zip test/* ，如果在文件中用绝对的路径，那么在压缩文件中也是绝对路径。就是说，如果你 zip test.zip /home/test/* ,那么在压缩文件中也是这样的层次关系。</p>\r\n\r\n<p>应用实例<br />\r\n1、把所有 my1*.doc 的文件打包成一个 new1.zip文件</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip new1.zip my1*.doc</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>new1.zip 可以省略扩展名简写成 new1，它会自行默认 .zip 的扩展名。</p>\r\n\r\n<p>2、删除除.zip文件中的指定文件</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip -d new1.zip my18.doc</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>如果当初my18.doc 是压缩在 new1.zip 中的一个文件，现在这条命令把它从压缩文件中抽走并删掉。-d 是删除的意思。</p>\r\n\r\n<p>3、添加一个文件到.zip文件中</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip -g new1.zip my32.doc</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>如果当初并没有把 my32.doc 压在 new1.zip 里面，现在把它加进去。-g 选项是增加而不要重新产生的意思</p>\r\n\r\n<p>4、将更改过的文件添加到压缩包中</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip -u new1.zip my2*.doc</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>如果当初 my2*.doc都已经压缩进 new1.zip 里面了，但是后来 my2*.doc中有几个文件有更改，又不想去找出到底是哪些文件更改了，这条命令请系统自行帮助检查，更改过的才更新到压缩，否则就不必动。</p>\r\n\r\n<p>5、把一个文件abc.txt和一个目录dir1压缩成为yasuo.zip：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip -r yasuo.zip abc.txt dir1</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>6、将/home/Blinux/html/ 这个目录下所有文件和文件夹打包为当前目录下的html.zip</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\nzip -qr html.zip /home/Blinux/html</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n',2,'2017-03-20 07:46:43','2017-03-26 19:42:37',2,'2017-03-10'),(53,'h5 - vue项目中 如何让图片自适应各种屏幕的宽度，宽高比固定','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/44/content_屏幕快照_2017-03-23_上午10.42.42.png\" style=\"width: 691px; height: 348px;\" /></p>\r\n\r\n<p>如上图，图片上传固定比例的照片，图片宽度100%。高度随着屏幕宽度的变化自适应。</p>\r\n\r\n<p>1.先定义一个计算的方法，comouted中定义：</p>\r\n\r\n<pre>\r\n  computed: {\r\n    ad_height() {\r\n      let screen_width = document.documentElement.clientWidth\r\n      let margin = 10\r\n      let image_width = screen_width - margin * 2       //margin 是边距\r\n      let image_height = image_width * 3 / 8            //3：8 就是高：宽比\r\n      return image_height + &quot;px&quot;\r\n    },\r\n  }\r\n</pre>\r\n\r\n<p>2.在view中绑定这个方法中的数据</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<b>&lt;</b>div<b> </b>class<b>=</b>&quot;advertisement&quot;<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<b>&lt;</b>img<b> v-</b>for<b>=</b>&#39;advertisement in first_part.advertisements&#39;<b> :</b>src<b>=</b>&quot;advertisement.picture&quot;<b> </b>alt<b>=</b>&quot;&quot;<b> </b>style<b>=</b>&quot;width: 100%; &nbsp;display: block;&quot;<b> v-bind:</b>style<b>=</b>&quot;{height: ad_height}&quot;<b>/&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<b>&lt;/</b>div<b>&gt;</b></p>\r\n',2,'2017-03-23 02:51:43','2017-03-26 19:41:40',2,'2017-03-14'),(54,'对前端用户群发站内信的功能-使用select2（transaction）','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/45/content_屏幕快照_2017-03-27_下午2.32.28.png\" style=\"width: 696px; height: 320px;\" /></p>\r\n\r\n<p>1.在view表单中添加下拉单，&nbsp; :multiple =&gt; true, &nbsp;选择一个数组</p>\r\n\r\n<p><b>&lt;</b>div<b> </b>class<b>=</b>&quot;control-group&quot;<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &lt;%= f.label t(&#39;global.user&#39;), :class =&gt; &#39;control&#39; %&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; <b>&lt;</b>div<b> </b>class<b>=</b>&quot;controls&quot;<b>&gt;</b></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &lt;%= select_tag(:user_id, options_from_collection_for_select(User.all, &quot;id&quot;, &quot;nickname&quot;), :multiple=&gt;true, :style</p>\r\n\r\n<p>&nbsp; &nbsp; <b>&lt;/</b>div<b>&gt;</b></p>\r\n\r\n<p>&nbsp; <b>&lt;/</b>div<b>&gt;</b></p>\r\n\r\n<p><b>2.在对应controller 中添加方法： (transaction ：</b>Rails 中的事务处理，&nbsp;事务用来确保多条SQL语句要么全部执行成功、要么不执行。事务可以帮助开发者保证应用中的数据一致性。常见的使用事务的场景是银行转账，钱从一个账户转移到另外一个账户。如果中间的某一步出错，那么整个过程应该重置。<b>)</b></p>\r\n\r\n<pre>\r\n  def create\r\n    # 要给出提示\r\n   Rails.logger.info &quot;==================&quot;\r\n   Rails.logger.info params[:user_id].inspect\r\n   Rails.logger.info &quot;==================&quot;\r\n    params[:user_id].each do |id|\r\n      Message.transaction do\r\n        @message = Message.create(\r\n          content: params[:message][:content],\r\n          title: params[:message][:title],\r\n          user_id: id.to_i\r\n        )\r\n      end\r\n    end\r\n    redirect_to messages_path\r\n  end\r\n</pre>\r\n\r\n<p>3.使用select2&nbsp;</p>\r\n\r\n<p>gem &quot;select2-rails&quot;, &#39;3.5.2&#39; &nbsp; &nbsp; &nbsp; &nbsp;#gem中添加</p>\r\n\r\n<p>//= require select2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # application.js中添加</p>\r\n\r\n<p>&nbsp;*= require select2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # application.css 中添加</p>\r\n\r\n<p>4.在view 表中页面中 添加 &lt;script&gt;代码：</p>\r\n\r\n<pre>\r\n  $( &quot;#user_id&quot; ).select2({\r\n     theme: &quot;bootstrap&quot;\r\n  });\r\n</pre>\r\n',2,'2017-03-27 06:52:15','2017-03-27 07:23:22',2,'2017-03-16'),(55,'rails 中使用modal + ajax   比如在用户列表，增加一个冻结的功能。','<p>在浏览器中的用户列表中增加解冻按钮：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/46/content_屏幕快照_2017-03-30_下午2.04.37.png\" style=\"width: 455px; height: 218px;\" /></p>\r\n\r\n<p>点击冻结，弹出下拉窗，就是我们调用的modal.</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/47/content_屏幕快照_2017-03-30_下午2.05.04.png\" style=\"width: 556px; height: 253px;\" /></p>\r\n\r\n<p>1.首先在index页面中添加按钮（冻结，解冻）：</p>\r\n\r\n<pre>\r\n&nbsp;\r\n            &lt;% if user.is_enabled.blank? or user.is_enabled == &quot;ture&quot; %&gt;\r\n              &lt;%= link_to_modal freeze_users_path(:id =&gt; user.id), id: &quot;freeze&quot;, class: &#39;btn btn-danger&#39;, title: &quot;冻结&quot; do %&gt;\r\n                &lt;%= t(&#39;freeze&#39;) %&gt;\r\n              &lt;% end %&gt;\r\n            &lt;% else%&gt;\r\n              &lt;%= link_to t(&#39;defreeze&#39;), defreeze_users_path(:id =&gt; user.id), method: :post,  class: &#39;btn btn-primary&#39;,\r\n                data: { confirm: &quot;确定要解冻该用户么?&quot;} %&gt;\r\n            &lt;% end %&gt;\r\n</pre>\r\n\r\n<p>2.controller的对应的action：</p>\r\n\r\n<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/48/content_屏幕快照_2017-03-30_下午2.13.45.png\" style=\"width: 605px; height: 443px;\" /></p>\r\n\r\n<p>3.设置对应的route路由中。</p>\r\n\r\n<p>4.1 重点来了 ，需要调用modal了.首先在gemfile 中添加gem :&nbsp;</p>\r\n\r\n<pre>\r\ngem &#39;bootstrap-modal-rails&#39;, &#39;2.2.5&#39;</pre>\r\n\r\n<p>4.2 在application.js 中添加:</p>\r\n\r\n<pre>\r\n//= require bootstrap-modal    \r\n//= require bootstrap-modalmanager\r\n\r\n$(document).on(&#39;click&#39;, &#39;[data-toggle=modal-ajax]&#39;, function(e) {\r\n    e.preventDefault();        \r\n    e.stopPropagation();       \r\n    console.info();            \r\n    $(&#39;#modal-ajax&#39;).empty().modal().modal(&#39;loading&#39;);\r\n    $.rails.handleRemote($(this));  \r\n    return false;              \r\n});\r\n\r\n$(document).on(&#39;ajax:beforeSend&#39;, &#39;.modal form[data-remote]&#39;, function(e) {\r\n    return $(this).parents(&#39;.modal&#39;).modal(&#39;loading&#39;);\r\n});\r\n</pre>\r\n\r\n<p>4.3 application.css中添加：</p>\r\n\r\n<pre>\r\n *= require bootstrap-modal    \r\n *= require bootstrap-modal-bs3patch\r\n</pre>\r\n\r\n<p>4.4 helpers/application_helper.rb中添加：</p>\r\n\r\n<pre>\r\n  def link_to_modal(name, options = nil, html_options = nil, &amp;block)\r\n    default_options = { data: { toggle: &#39;modal-ajax&#39;, target: &#39;#modal-ajax&#39; } }\r\n    if block_given?            \r\n      link_to(name, default_options.update(options), html_options, &amp;block)\r\n    else\r\n      link_to(name, options, default_options.update(html_options))\r\n    end\r\n  end\r\n</pre>\r\n\r\n<p>&nbsp; def <b>modal_header</b>(title) &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; %(&lt;div class=&quot;modal-header&quot;&gt; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/button&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;h3&gt;#{title}&lt;/h3&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;/div&gt;).html_safe</p>\r\n\r\n<p>&nbsp; end&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; def <b>modal_footer</b>(&amp;block)&nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; %(&lt;div class=&quot;modal-footer&quot;&gt; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; #{capture(&amp;block)}&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &lt;button type=&quot;button&quot; data-dismiss=&quot;modal&quot; class=&quot;btn&quot;&gt;#{t(&quot;cancel&quot;)}&lt;/button&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;/div&gt;).html_safe &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>4.5 layouts/application.html.rb中添加：</p>\r\n\r\n<p>&nbsp; &nbsp; &lt;!-- 全局弹出层 --&gt;</p>\r\n\r\n<p><b>&nbsp; &nbsp; &lt;</b>div<b> </b>id<b>=</b>&quot;modal-ajax&quot;<b> </b>class<b>=</b>&quot;modal hide fade&quot;<b> </b>tabindex<b>=</b>&quot;-1&quot;<b>&gt;&lt;/</b>div<b>&gt;</b></p>\r\n\r\n<p>4.6 在视图层添加 view/users/freeze.js.erb:</p>\r\n\r\n<pre>&nbsp;\r\n$(\'#modal-ajax\').html(\'<%= j(render \'freeze\') %>\');\r\n$(\'#modal-ajax\').modal();\r\n$(\"#modal-ajax\").removeClass(\"hide\");\r\n</pre>\r\n\r\n<p>4.7 在视图层添加 view/users/_freeze.html.erb, 在freeze.js.erb中render会渲染这个视图</p>\r\n\r\n<%= modal_header t(\"freeze_user\") %>\r\n\r\n<%= form_for @user, url: freeze_reason_users_path, :html => { method: \'post\'} do |f| %>\r\n    <div class=\"modal-body\">\r\n    <input type=\"hidden\" name=\"id\" value=\"<%= @user.id %>\"/>\r\n      <%#= f.radio_button :is_enabled, \'false\', :id => \'user_reason\', :style => \'margin: 0; margin-top: -22px; margin-left: 20px;\', :class=>\"stat\r\n      <%#= f.label :reason, \'冻结\', :style => \'margin-top: -25px; margin-left: 10px;\' %>\r\n\r\n      <div class=\"control-group\" id= \"reason_div\" >\r\n        <%= f.label t(\"freeze_reason\") %>\r\n        <div class=\"controls\">\r\n          <%= f.text_area :reason_of_freeze, :name => \"reason\", :placeholder => t(\'freeze_placeholder\'), style: \"width: 100%; height: 80px; margi\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <%= modal_footer do %>\r\n        <%= f.submit t(\'global.submit\'), class: \'btn btn-primary\'%>\r\n    <% end %>\r\n<% end %>\r\n\r\n\r\n\r\n',2,'2017-03-30 06:04:02','2017-03-30 07:12:50',3,'2017-03-18'),(56,'h5自适应的九宫格(图片，文字...) ,适配所有的手机','<p><img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/49/content_屏幕快照_2017-04-01_下午4.50.22.png\" style=\"width: 409px; height: 118px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1.body代码：</p>\r\n\r\n<pre>\r\n&lt;div id=&quot;test&quot;&gt;\r\n  &lt;a&gt;&lt;div&gt;1&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;2&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;3&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;4&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;5&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;6&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;7&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;8&lt;/div&gt;\r\n&lt;/a&gt;\r\n  &lt;a&gt;&lt;div&gt;9&lt;/div&gt;\r\n&lt;/a&gt;\r\n&lt;/div&gt;</pre>\r\n\r\n<p>2.css.&nbsp;</p>\r\n\r\n<pre>\r\n#test div{\r\n  width: calc(100% - 13px);\r\n  line-height: 50px;\r\n  text-align:center;\r\n  background: #AAA;\r\n  margin-top: 13px;\r\n}\r\n#test a{\r\n  width: calc((100% - 13px) / 3);     //如果是6宫格，就➗2 就可以了\r\n  line-height: 55px;\r\n  float: left;\r\n  text-decoration: none;\r\n  padding-left: 13px;\r\n  padding-bottom: 13px;\r\n  margin-right: -13px;\r\n  margin-bottom: -13px;\r\n}\r\n#test a:hover{\r\n  background: red;\r\n}\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n',2,'2017-04-01 08:55:24','2017-04-01 08:56:19',3,'2017-04-20');
/*!40000 ALTER TABLE `articles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `categories`
--

DROP TABLE IF EXISTS `categories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `categories`
--

LOCK TABLES `categories` WRITE;
/*!40000 ALTER TABLE `categories` DISABLE KEYS */;
INSERT INTO `categories` VALUES (1,'生活','2016-12-16 04:16:34','2016-12-16 04:16:34'),(2,'技术','2016-12-16 04:16:44','2016-12-16 04:16:44'),(3,'音乐','2017-01-12 10:28:31','2017-01-12 10:28:31'),(4,'翻译','2017-01-12 10:28:42','2017-01-12 10:28:42');
/*!40000 ALTER TABLE `categories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ckeditor_assets`
--

DROP TABLE IF EXISTS `ckeditor_assets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ckeditor_assets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `data_file_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `data_content_type` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `data_file_size` int(11) DEFAULT NULL,
  `assetable_id` int(11) DEFAULT NULL,
  `assetable_type` varchar(30) COLLATE utf8_unicode_ci DEFAULT NULL,
  `type` varchar(30) COLLATE utf8_unicode_ci DEFAULT NULL,
  `width` int(11) DEFAULT NULL,
  `height` int(11) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_ckeditor_assetable_type` (`assetable_type`,`type`,`assetable_id`),
  KEY `idx_ckeditor_assetable` (`assetable_type`,`assetable_id`)
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ckeditor_assets`
--

LOCK TABLES `ckeditor_assets` WRITE;
/*!40000 ALTER TABLE `ckeditor_assets` DISABLE KEYS */;
INSERT INTO `ckeditor_assets` VALUES (5,'2016-04-07_090123.png','image/png',962143,1,'User','Ckeditor::Picture',748,1011,'2017-01-06 06:02:43','2017-01-06 06:02:43'),(6,'1.png','image/png',67180,1,'User','Ckeditor::Picture',450,161,'2017-01-07 14:47:16','2017-01-07 14:47:16'),(7,'2.png','image/png',175767,1,'User','Ckeditor::Picture',450,258,'2017-01-07 14:47:19','2017-01-07 14:47:19'),(8,'3.jpeg','image/jpeg',9715,1,'User','Ckeditor::Picture',450,253,'2017-01-07 14:47:22','2017-01-07 14:47:22'),(9,'4.jpeg','image/jpeg',11554,1,'User','Ckeditor::Picture',450,253,'2017-01-07 14:47:24','2017-01-07 14:47:24'),(10,'sougou1__1_.png','image/png',26774,1,'User','Ckeditor::Picture',703,171,'2017-01-07 14:57:08','2017-01-07 14:57:08'),(11,'sogou2.png','image/png',61135,1,'User','Ckeditor::Picture',712,426,'2017-01-07 14:57:11','2017-01-07 14:57:11'),(12,'sougo3.png','image/png',22392,1,'User','Ckeditor::Picture',916,146,'2017-01-07 14:58:54','2017-01-07 14:58:54'),(13,'2016-10-26_23-44-48屏幕截图.png','image/png',67180,1,'User','Ckeditor::Picture',450,161,'2017-01-07 15:09:10','2017-01-07 15:09:10'),(14,'bug1_.png','image/png',32525,1,'User','Ckeditor::Picture',863,120,'2017-01-07 15:38:41','2017-01-07 15:38:41'),(15,'bug2.png','image/png',17211,1,'User','Ckeditor::Picture',739,82,'2017-01-07 15:40:39','2017-01-07 15:40:39'),(16,'drop_down_menu.png','image/png',156068,1,'User','Ckeditor::Picture',450,239,'2017-01-12 09:34:26','2017-01-12 09:34:26'),(17,'Screenshot_from_2016-12-01_11-08-13.png','image/png',59980,1,'User','Ckeditor::Picture',450,338,'2017-01-12 09:34:30','2017-01-12 09:34:30'),(18,'Screenshot_from_2016-12-01_11-09-26.png','image/png',16167,1,'User','Ckeditor::Picture',272,300,'2017-01-12 09:34:32','2017-01-12 09:34:32'),(19,'devise_for.png','image/png',19361,1,'User','Ckeditor::Picture',889,160,'2017-01-12 09:54:51','2017-01-12 09:54:51'),(20,'页面显示.png','image/png',169848,1,'User','Ckeditor::Picture',450,271,'2017-01-12 10:03:07','2017-01-12 10:03:07'),(21,'统计show页面点击量.png','image/png',21602,1,'User','Ckeditor::Picture',548,175,'2017-01-12 10:03:10','2017-01-12 10:03:10'),(22,'index显示统计数.png','image/png',15925,1,'User','Ckeditor::Picture',586,98,'2017-01-12 10:03:13','2017-01-12 10:03:13'),(23,'count_all.png','image/png',64899,1,'User','Ckeditor::Picture',598,405,'2017-01-12 10:06:17','2017-01-12 10:06:17'),(26,'ckeditor.png','image/png',95681,1,'User','Ckeditor::Picture',948,362,'2017-01-12 10:13:32','2017-01-12 10:13:32'),(27,'分页图片.png','image/png',153101,1,'User','Ckeditor::Picture',639,197,'2017-01-12 10:22:05','2017-01-12 10:22:05'),(28,'IMG_0012.JPG','image/jpeg',81507,1,'User','Ckeditor::Picture',640,640,'2017-01-26 11:52:53','2017-01-26 11:52:53'),(29,'IMG_0013.JPG','image/jpeg',53867,1,'User','Ckeditor::Picture',640,640,'2017-01-26 11:52:57','2017-01-26 11:52:57'),(30,'IMG_0014.JPG','image/jpeg',62362,1,'User','Ckeditor::Picture',640,640,'2017-01-26 11:52:59','2017-01-26 11:52:59'),(31,'IMG_3346.JPG','image/jpeg',5039968,1,'User','Ckeditor::Picture',2379,1776,'2017-01-26 12:15:50','2017-01-26 12:15:50'),(32,'IMG_3347.JPG','image/jpeg',5358285,1,'User','Ckeditor::Picture',1836,2448,'2017-01-26 12:16:13','2017-01-26 12:16:13'),(34,'IMG_3282.JPG','image/jpeg',6144921,1,'User','Ckeditor::Picture',1713,2448,'2017-01-26 13:14:32','2017-01-26 13:14:32'),(35,'shuffle.png','image/png',19342,1,'User','Ckeditor::Picture',1121,53,'2017-02-18 02:05:01','2017-02-18 02:05:01'),(37,'屏幕快照_2017-03-01_上午9.33.24.png','image/png',130949,1,'User','Ckeditor::Picture',1094,666,'2017-03-01 01:34:57','2017-03-01 01:34:57'),(38,'屏幕快照_2017-03-01_上午10.44.35.png','image/png',8894,1,'User','Ckeditor::Picture',499,55,'2017-03-01 02:45:07','2017-03-01 02:45:07'),(39,'屏幕快照_2017-03-08_下午3.46.48.png','image/png',58501,1,'User','Ckeditor::Picture',929,404,'2017-03-08 07:51:17','2017-03-08 07:51:17'),(40,'屏幕快照_2017-03-08_下午6.00.26.png','image/png',24483,1,'User','Ckeditor::Picture',865,404,'2017-03-08 10:00:55','2017-03-08 10:00:55'),(42,'屏幕快照_2017-03-11_下午7.47.45.png','image/png',12677,1,'User','Ckeditor::Picture',878,145,'2017-03-11 11:48:38','2017-03-11 11:48:38'),(43,'屏幕快照_2017-03-16_下午2.07.46.png','image/png',61938,1,'User','Ckeditor::Picture',622,404,'2017-03-16 06:08:38','2017-03-16 06:08:38'),(44,'屏幕快照_2017-03-23_上午10.42.42.png','image/png',157126,1,'User','Ckeditor::Picture',691,348,'2017-03-23 02:43:42','2017-03-23 02:43:42'),(45,'屏幕快照_2017-03-27_下午2.32.28.png','image/png',26752,1,'User','Ckeditor::Picture',696,320,'2017-03-27 06:34:07','2017-03-27 06:34:07'),(46,'屏幕快照_2017-03-30_下午2.04.37.png','image/png',19008,1,'User','Ckeditor::Picture',455,218,'2017-03-30 06:07:32','2017-03-30 06:07:32'),(47,'屏幕快照_2017-03-30_下午2.05.04.png','image/png',18738,1,'User','Ckeditor::Picture',556,253,'2017-03-30 06:07:37','2017-03-30 06:07:37'),(48,'屏幕快照_2017-03-30_下午2.13.45.png','image/png',64820,1,'User','Ckeditor::Picture',605,443,'2017-03-30 06:14:10','2017-03-30 06:14:10'),(49,'屏幕快照_2017-04-01_下午4.50.22.png','image/png',4506,1,'User','Ckeditor::Picture',409,118,'2017-04-01 08:51:21','2017-04-01 08:51:21');
/*!40000 ALTER TABLE `ckeditor_assets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schema_migrations`
--

DROP TABLE IF EXISTS `schema_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  UNIQUE KEY `unique_schema_migrations` (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `schema_migrations`
--

LOCK TABLES `schema_migrations` WRITE;
/*!40000 ALTER TABLE `schema_migrations` DISABLE KEYS */;
INSERT INTO `schema_migrations` VALUES ('20161207054554'),('20161207054757'),('20161207094947'),('20161207095023'),('20161208075448'),('20161209065756'),('20161209100335'),('20161212105311'),('20161212105312'),('20170105045908');
/*!40000 ALTER TABLE `schema_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `encrypted_password` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `reset_password_token` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `reset_password_sent_at` datetime DEFAULT NULL,
  `remember_created_at` datetime DEFAULT NULL,
  `sign_in_count` int(11) NOT NULL DEFAULT '0',
  `current_sign_in_at` datetime DEFAULT NULL,
  `last_sign_in_at` datetime DEFAULT NULL,
  `current_sign_in_ip` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `last_sign_in_ip` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `username` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `author_intro` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_users_on_email` (`email`),
  UNIQUE KEY `index_users_on_reset_password_token` (`reset_password_token`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'330469102@qq.com','$2a$11$R2aIUjZtuV9fOGCXnR6oBOyYkxiSU/t3pl1eS8dttKfYoegZm5Ydm',NULL,NULL,NULL,45,'2017-04-01 08:47:56','2017-03-30 01:17:12','114.244.128.110','114.244.142.240','2016-12-16 06:00:08','2017-04-01 08:47:56','330469102@qq.com','<p><br />\r\n<img alt=\"\" src=\"http://yuanchengblog.b0.upaiyun.com/uploads/ckeditor/pictures/5/content_2016-04-07_090123.png\" style=\"margin-left: 10px; margin-right: 10px; float: left; width: 150px; height: 200px;\" /><span style=\"font-size:24px;\">博主是一个热爱音乐的程序员。</span></p>\r\n');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-04-01 17:10:26
